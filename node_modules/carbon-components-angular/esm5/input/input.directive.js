/**
 *
 * carbon-angular v0.0.0 | input.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A directive for applying styling to an input element.
 *
 * Example:
 *
 * ```html
 * <input ibmText/>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.
 */
var TextInput = /** @class */ (function () {
    function TextInput() {
        /**
         * `light` or `dark` input theme
         */
        this.theme = "dark";
        /**
         * Input field render size
         */
        this.size = "md";
        this.inputClass = true;
        this.invalid = false;
        this.warn = false;
        this.skeleton = false;
    }
    Object.defineProperty(TextInput.prototype, "isSizeXl", {
        get: function () {
            return this.size === "xl";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextInput.prototype, "isSizeSm", {
        get: function () {
            return this.size === "sm";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextInput.prototype, "isLightTheme", {
        get: function () {
            return this.theme === "light";
        },
        enumerable: true,
        configurable: true
    });
    TextInput.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmText]"
                },] }
    ];
    TextInput.propDecorators = {
        theme: [{ type: Input }],
        size: [{ type: Input }],
        inputClass: [{ type: HostBinding, args: ["class.bx--text-input",] }],
        isSizeXl: [{ type: HostBinding, args: ["class.bx--text-input--xl",] }],
        isSizeSm: [{ type: HostBinding, args: ["class.bx--text-input--sm",] }],
        invalid: [{ type: HostBinding, args: ["class.bx--text-input--invalid",] }, { type: Input }],
        warn: [{ type: HostBinding, args: ["class.bx--text-input__field-wrapper--warning",] }, { type: Input }],
        skeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }, { type: Input }],
        isLightTheme: [{ type: HostBinding, args: ["class.bx--text-input--light",] }]
    };
    return TextInput;
}());
export { TextInput };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pbnB1dC8iLCJzb3VyY2VzIjpbImlucHV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQ7Ozs7Ozs7Ozs7R0FVRztBQUNIO0lBQUE7UUFJQzs7V0FFRztRQUNNLFVBQUssR0FBcUIsTUFBTSxDQUFDO1FBRTFDOztXQUVHO1FBQ00sU0FBSSxHQUF1QixJQUFJLENBQUM7UUFFSixlQUFVLEdBQUcsSUFBSSxDQUFDO1FBT0EsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNELFNBQUksR0FBRyxLQUFLLENBQUM7UUFDdkMsYUFBUSxHQUFHLEtBQUssQ0FBQztJQUk5RCxDQUFDO0lBWkEsc0JBQTZDLCtCQUFRO2FBQXJEO1lBQ0MsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztRQUMzQixDQUFDOzs7T0FBQTtJQUNELHNCQUE2QywrQkFBUTthQUFyRDtZQUNDLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7UUFDM0IsQ0FBQzs7O09BQUE7SUFJRCxzQkFBZ0QsbUNBQVk7YUFBNUQ7WUFDQyxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssT0FBTyxDQUFDO1FBQy9CLENBQUM7OztPQUFBOztnQkExQkQsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxXQUFXO2lCQUNyQjs7O3dCQUtDLEtBQUs7dUJBS0wsS0FBSzs2QkFFTCxXQUFXLFNBQUMsc0JBQXNCOzJCQUNsQyxXQUFXLFNBQUMsMEJBQTBCOzJCQUd0QyxXQUFXLFNBQUMsMEJBQTBCOzBCQUd0QyxXQUFXLFNBQUMsK0JBQStCLGNBQUcsS0FBSzt1QkFDbkQsV0FBVyxTQUFDLDhDQUE4QyxjQUFHLEtBQUs7MkJBQ2xFLFdBQVcsU0FBQyxvQkFBb0IsY0FBRyxLQUFLOytCQUN4QyxXQUFXLFNBQUMsNkJBQTZCOztJQUczQyxnQkFBQztDQUFBLEFBM0JELElBMkJDO1NBeEJZLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbi8qKlxuICogQSBkaXJlY3RpdmUgZm9yIGFwcGx5aW5nIHN0eWxpbmcgdG8gYW4gaW5wdXQgZWxlbWVudC5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxpbnB1dCBpYm1UZXh0Lz5cbiAqIGBgYFxuICpcbiAqIFNlZSB0aGUgW3ZhbmlsbGEgY2FyYm9uIGRvY3NdKGh0dHA6Ly93d3cuY2FyYm9uZGVzaWduc3lzdGVtLmNvbS9jb21wb25lbnRzL3RleHQtaW5wdXQvY29kZSkgZm9yIG1vcmUgZGV0YWlsLlxuICovXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6IFwiW2libVRleHRdXCJcbn0pXG5leHBvcnQgY2xhc3MgVGV4dElucHV0IHtcblx0LyoqXG5cdCAqIGBsaWdodGAgb3IgYGRhcmtgIGlucHV0IHRoZW1lXG5cdCAqL1xuXHRASW5wdXQoKSB0aGVtZTogXCJsaWdodFwiIHwgXCJkYXJrXCIgPSBcImRhcmtcIjtcblxuXHQvKipcblx0ICogSW5wdXQgZmllbGQgcmVuZGVyIHNpemVcblx0ICovXG5cdEBJbnB1dCgpIHNpemU6IFwic21cIiB8IFwibWRcIiB8IFwieGxcIiA9IFwibWRcIjtcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dFwiKSBpbnB1dENsYXNzID0gdHJ1ZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXQtLXhsXCIpIGdldCBpc1NpemVYbCgpIHtcblx0XHRyZXR1cm4gdGhpcy5zaXplID09PSBcInhsXCI7XG5cdH1cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXQtLXNtXCIpIGdldCBpc1NpemVTbSgpIHtcblx0XHRyZXR1cm4gdGhpcy5zaXplID09PSBcInNtXCI7XG5cdH1cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXQtLWludmFsaWRcIikgQElucHV0KCkgaW52YWxpZCA9IGZhbHNlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dF9fZmllbGQtd3JhcHBlci0td2FybmluZ1wiKSBASW5wdXQoKSB3YXJuID0gZmFsc2U7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1za2VsZXRvblwiKSBASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGV4dC1pbnB1dC0tbGlnaHRcIikgZ2V0IGlzTGlnaHRUaGVtZSgpIHtcblx0XHRyZXR1cm4gdGhpcy50aGVtZSA9PT0gXCJsaWdodFwiO1xuXHR9XG59XG4iXX0=