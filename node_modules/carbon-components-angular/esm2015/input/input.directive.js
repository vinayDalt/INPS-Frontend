/**
 *
 * carbon-angular v0.0.0 | input.directive.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A directive for applying styling to an input element.
 *
 * Example:
 *
 * ```html
 * <input ibmText/>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.
 */
export class TextInput {
    constructor() {
        /**
         * `light` or `dark` input theme
         */
        this.theme = "dark";
        /**
         * Input field render size
         */
        this.size = "md";
        this.inputClass = true;
        this.invalid = false;
        this.warn = false;
        this.skeleton = false;
    }
    get isSizeXl() {
        return this.size === "xl";
    }
    get isSizeSm() {
        return this.size === "sm";
    }
    get isLightTheme() {
        return this.theme === "light";
    }
}
TextInput.decorators = [
    { type: Directive, args: [{
                selector: "[ibmText]"
            },] }
];
TextInput.propDecorators = {
    theme: [{ type: Input }],
    size: [{ type: Input }],
    inputClass: [{ type: HostBinding, args: ["class.bx--text-input",] }],
    isSizeXl: [{ type: HostBinding, args: ["class.bx--text-input--xl",] }],
    isSizeSm: [{ type: HostBinding, args: ["class.bx--text-input--sm",] }],
    invalid: [{ type: HostBinding, args: ["class.bx--text-input--invalid",] }, { type: Input }],
    warn: [{ type: HostBinding, args: ["class.bx--text-input__field-wrapper--warning",] }, { type: Input }],
    skeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }, { type: Input }],
    isLightTheme: [{ type: HostBinding, args: ["class.bx--text-input--light",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pbnB1dC8iLCJzb3VyY2VzIjpbImlucHV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQ7Ozs7Ozs7Ozs7R0FVRztBQUlILE1BQU0sT0FBTyxTQUFTO0lBSHRCO1FBSUM7O1dBRUc7UUFDTSxVQUFLLEdBQXFCLE1BQU0sQ0FBQztRQUUxQzs7V0FFRztRQUNNLFNBQUksR0FBdUIsSUFBSSxDQUFDO1FBRUosZUFBVSxHQUFHLElBQUksQ0FBQztRQU9BLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFDRCxTQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ3ZDLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFJOUQsQ0FBQztJQVpBLElBQTZDLFFBQVE7UUFDcEQsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBNkMsUUFBUTtRQUNwRCxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFJRCxJQUFnRCxZQUFZO1FBQzNELE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxPQUFPLENBQUM7SUFDL0IsQ0FBQzs7O1lBMUJELFNBQVMsU0FBQztnQkFDVixRQUFRLEVBQUUsV0FBVzthQUNyQjs7O29CQUtDLEtBQUs7bUJBS0wsS0FBSzt5QkFFTCxXQUFXLFNBQUMsc0JBQXNCO3VCQUNsQyxXQUFXLFNBQUMsMEJBQTBCO3VCQUd0QyxXQUFXLFNBQUMsMEJBQTBCO3NCQUd0QyxXQUFXLFNBQUMsK0JBQStCLGNBQUcsS0FBSzttQkFDbkQsV0FBVyxTQUFDLDhDQUE4QyxjQUFHLEtBQUs7dUJBQ2xFLFdBQVcsU0FBQyxvQkFBb0IsY0FBRyxLQUFLOzJCQUN4QyxXQUFXLFNBQUMsNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vKipcbiAqIEEgZGlyZWN0aXZlIGZvciBhcHBseWluZyBzdHlsaW5nIHRvIGFuIGlucHV0IGVsZW1lbnQuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGBodG1sXG4gKiA8aW5wdXQgaWJtVGV4dC8+XG4gKiBgYGBcbiAqXG4gKiBTZWUgdGhlIFt2YW5pbGxhIGNhcmJvbiBkb2NzXShodHRwOi8vd3d3LmNhcmJvbmRlc2lnbnN5c3RlbS5jb20vY29tcG9uZW50cy90ZXh0LWlucHV0L2NvZGUpIGZvciBtb3JlIGRldGFpbC5cbiAqL1xuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiBcIltpYm1UZXh0XVwiXG59KVxuZXhwb3J0IGNsYXNzIFRleHRJbnB1dCB7XG5cdC8qKlxuXHQgKiBgbGlnaHRgIG9yIGBkYXJrYCBpbnB1dCB0aGVtZVxuXHQgKi9cblx0QElucHV0KCkgdGhlbWU6IFwibGlnaHRcIiB8IFwiZGFya1wiID0gXCJkYXJrXCI7XG5cblx0LyoqXG5cdCAqIElucHV0IGZpZWxkIHJlbmRlciBzaXplXG5cdCAqL1xuXHRASW5wdXQoKSBzaXplOiBcInNtXCIgfCBcIm1kXCIgfCBcInhsXCIgPSBcIm1kXCI7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXRcIikgaW5wdXRDbGFzcyA9IHRydWU7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS14bFwiKSBnZXQgaXNTaXplWGwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJ4bFwiO1xuXHR9XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS1zbVwiKSBnZXQgaXNTaXplU20oKSB7XG5cdFx0cmV0dXJuIHRoaXMuc2l6ZSA9PT0gXCJzbVwiO1xuXHR9XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10ZXh0LWlucHV0LS1pbnZhbGlkXCIpIEBJbnB1dCgpIGludmFsaWQgPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXRfX2ZpZWxkLXdyYXBwZXItLXdhcm5pbmdcIikgQElucHV0KCkgd2FybiA9IGZhbHNlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc2tlbGV0b25cIikgQElucHV0KCkgc2tlbGV0b24gPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXRleHQtaW5wdXQtLWxpZ2h0XCIpIGdldCBpc0xpZ2h0VGhlbWUoKSB7XG5cdFx0cmV0dXJuIHRoaXMudGhlbWUgPT09IFwibGlnaHRcIjtcblx0fVxufVxuIl19