import { ElementRef, AfterViewInit } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export declare class RecordingFilledAltComponent {
    ariaLabel: string;
    ariaLabelledby: string;
    ariaHidden: boolean;
    title: string;
    focusable: boolean;
    innerClass: string;
    size: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RecordingFilledAltComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<RecordingFilledAltComponent, "ibm-icon-recording-filled-alt", never, { "focusable": "focusable"; "ariaLabel": "ariaLabel"; "ariaLabelledby": "ariaLabelledby"; "ariaHidden": "ariaHidden"; "title": "title"; "innerClass": "innerClass"; "size": "size"; }, {}, never, never>;
}
export declare class RecordingFilledAltDirective implements AfterViewInit {
    protected elementRef: ElementRef;
    static titleIdCounter: number;
    ariaLabel: string;
    ariaLabelledby: string;
    ariaHidden: boolean;
    title: string;
    isFocusable: boolean;
    size: string;
    protected icons: {
        32: {
            metadata: {
                moduleName: string;
                filepath: string;
                descriptor: {
                    elem: string;
                    attrs: {
                        xmlns: string;
                        viewBox: string;
                        fill: string;
                        width: number;
                        height: number;
                    };
                    content: ({
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path"?: undefined;
                            opacity?: undefined;
                        };
                    } | {
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path": string;
                            opacity: string;
                        };
                    })[];
                    name: string;
                    size: number;
                };
                size: number;
            };
            svg: string;
        };
        24: {
            metadata: {
                moduleName: string;
                filepath: string;
                descriptor: {
                    elem: string;
                    attrs: {
                        xmlns: string;
                        viewBox: string;
                        fill: string;
                        width: number;
                        height: number;
                    };
                    content: ({
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path"?: undefined;
                            opacity?: undefined;
                        };
                    } | {
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path": string;
                            opacity: string;
                        };
                    })[];
                    name: string;
                    size: number;
                };
                size: number;
            };
            svg: string;
        };
        20: {
            metadata: {
                moduleName: string;
                filepath: string;
                descriptor: {
                    elem: string;
                    attrs: {
                        xmlns: string;
                        viewBox: string;
                        fill: string;
                        width: number;
                        height: number;
                    };
                    content: ({
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path"?: undefined;
                            opacity?: undefined;
                        };
                    } | {
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path": string;
                            opacity: string;
                        };
                    })[];
                    name: string;
                    size: number;
                };
                size: number;
            };
            svg: string;
        };
        16: {
            metadata: {
                moduleName: string;
                filepath: string;
                descriptor: {
                    elem: string;
                    attrs: {
                        xmlns: string;
                        viewBox: string;
                        fill: string;
                        width: number;
                        height: number;
                    };
                    content: ({
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path"?: undefined;
                            opacity?: undefined;
                        };
                    } | {
                        elem: string;
                        attrs: {
                            d: string;
                            "data-icon-path": string;
                            opacity: string;
                        };
                    })[];
                    name: string;
                    size: number;
                };
                size: number;
            };
            svg: string;
        };
    };
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RecordingFilledAltDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<RecordingFilledAltDirective, "[ibmIconRecordingFilledAlt]", never, { "isFocusable": "isFocusable"; "ariaLabel": "ariaLabel"; "ariaLabelledby": "ariaLabelledby"; "ariaHidden": "ariaHidden"; "title": "title"; "size": "size"; }, {}, never>;
}
export declare class RecordingFilledAltModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<RecordingFilledAltModule, [typeof RecordingFilledAltComponent, typeof RecordingFilledAltDirective], never, [typeof RecordingFilledAltComponent, typeof RecordingFilledAltDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<RecordingFilledAltModule>;
}

//# sourceMappingURL=icon.d.ts.map