import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var ModelReferenceComponent = /** @class */ (function () {
    function ModelReferenceComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ModelReferenceComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ModelReferenceComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceComponent.prototype, "size", void 0);
ModelReferenceComponent.ɵfac = function ModelReferenceComponent_Factory(t) { return new (t || ModelReferenceComponent)(); };
ModelReferenceComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModelReferenceComponent, selectors: [["ibm-icon-model-reference"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconModelReference", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function ModelReferenceComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [ModelReferenceDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModelReferenceComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-model-reference",
                template: "\n    <svg\n      ibmIconModelReference\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ModelReferenceComponent;
}());
var ModelReferenceDirective = /** @class */ (function () {
    function ModelReferenceDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "ModelReference32", "filepath": "model--reference/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z" } }, { "elem": "path", "attrs": { "d": "M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z" } }], "name": "model--reference", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z\"></path><path d=\"M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "ModelReference24", "filepath": "model--reference/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z" } }, { "elem": "path", "attrs": { "d": "M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z" } }], "name": "model--reference", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z\"></path><path d=\"M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "ModelReference20", "filepath": "model--reference/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z" } }, { "elem": "path", "attrs": { "d": "M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z" } }], "name": "model--reference", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z\"></path><path d=\"M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "ModelReference16", "filepath": "model--reference/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z" } }, { "elem": "path", "attrs": { "d": "M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z" } }], "name": "model--reference", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z\"></path><path d=\"M23.5,4H8.5L1.7158,13.0454,6.01,18l1.5114-1.31L5.19,14h5.2554L16,22.8867,21.5544,14H26.81L15.8125,26.6919,17.3242,28l12.96-14.9546ZM5,12,9.5,6h4.6958l-3.75,6ZM16,6.8867,19.1958,12H12.8042Zm0,12.2266L12.8044,14h6.3912ZM21.5542,12l-3.75-6H22.5L27,12Z\"></path></svg>"
            },
        };
    }
    ModelReferenceDirective_1 = ModelReferenceDirective;
    ModelReferenceDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ModelReferenceDirective_1.titleIdCounter++;
            title.setAttribute("id", "model-reference-" + ModelReferenceDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "model-reference-" + ModelReferenceDirective_1.titleIdCounter);
        }
    };
    var ModelReferenceDirective_1;
    ModelReferenceDirective.titleIdCounter = 0;
    ModelReferenceDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ModelReferenceDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ModelReferenceDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ModelReferenceDirective.prototype, "size", void 0);
    ModelReferenceDirective = ModelReferenceDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], ModelReferenceDirective);
ModelReferenceDirective.ɵfac = function ModelReferenceDirective_Factory(t) { return new (t || ModelReferenceDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ModelReferenceDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ModelReferenceDirective, selectors: [["", "ibmIconModelReference", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModelReferenceDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconModelReference]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ModelReferenceDirective;
}());
var ModelReferenceModule = /** @class */ (function () {
    function ModelReferenceModule() {
    }
ModelReferenceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ModelReferenceModule });
ModelReferenceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ModelReferenceModule_Factory(t) { return new (t || ModelReferenceModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModelReferenceModule, { declarations: [ModelReferenceComponent, ModelReferenceDirective], exports: [ModelReferenceComponent, ModelReferenceDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModelReferenceModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ModelReferenceComponent,
                    ModelReferenceDirective,
                ],
                exports: [
                    ModelReferenceComponent,
                    ModelReferenceDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return ModelReferenceModule;
}());

export { ModelReferenceComponent, ModelReferenceDirective, ModelReferenceModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,