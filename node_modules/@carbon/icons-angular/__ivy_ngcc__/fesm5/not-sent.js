import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var NotSentComponent = /** @class */ (function () {
    function NotSentComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NotSentComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NotSentComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentComponent.prototype, "size", void 0);
NotSentComponent.ɵfac = function NotSentComponent_Factory(t) { return new (t || NotSentComponent)(); };
NotSentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NotSentComponent, selectors: [["ibm-icon-not-sent"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconNotSent", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function NotSentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [NotSentDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotSentComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-not-sent",
                template: "\n    <svg\n      ibmIconNotSent\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return NotSentComponent;
}());
var NotSentDirective = /** @class */ (function () {
    function NotSentDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "NotSent32", "filepath": "not-sent/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z" } }], "name": "not-sent", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "NotSent24", "filepath": "not-sent/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z" } }], "name": "not-sent", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "NotSent20", "filepath": "not-sent/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z" } }], "name": "not-sent", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "NotSent16", "filepath": "not-sent/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z" } }], "name": "not-sent", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 28.59L3.41 2 2 3.41l8 8L2.66 14.06a1 1 0 000 1.87l9.6 3.84 3.84 9.6A1 1 0 0017 30h0a1 1 0 00.92-.66L20.6 22l8 8zM5.8 15L11.54 13l3.05 3-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zM15.69 11.45l7.64-2.78-2.78 7.64 1.56 1.56L25.94 7.34a1 1 0 00-1.28-1.28L14.13 9.89z\"></path></svg>"
            },
        };
    }
    NotSentDirective_1 = NotSentDirective;
    NotSentDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            NotSentDirective_1.titleIdCounter++;
            title.setAttribute("id", "not-sent-" + NotSentDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "not-sent-" + NotSentDirective_1.titleIdCounter);
        }
    };
    var NotSentDirective_1;
    NotSentDirective.titleIdCounter = 0;
    NotSentDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NotSentDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NotSentDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NotSentDirective.prototype, "size", void 0);
    NotSentDirective = NotSentDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], NotSentDirective);
NotSentDirective.ɵfac = function NotSentDirective_Factory(t) { return new (t || NotSentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NotSentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NotSentDirective, selectors: [["", "ibmIconNotSent", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotSentDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconNotSent]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return NotSentDirective;
}());
var NotSentModule = /** @class */ (function () {
    function NotSentModule() {
    }
NotSentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NotSentModule });
NotSentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NotSentModule_Factory(t) { return new (t || NotSentModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NotSentModule, { declarations: [NotSentComponent, NotSentDirective], exports: [NotSentComponent, NotSentDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotSentModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    NotSentComponent,
                    NotSentDirective,
                ],
                exports: [
                    NotSentComponent,
                    NotSentDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return NotSentModule;
}());

export { NotSentComponent, NotSentDirective, NotSentModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,