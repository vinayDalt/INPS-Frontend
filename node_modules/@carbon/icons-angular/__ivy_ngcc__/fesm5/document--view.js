import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DocumentViewComponent = /** @class */ (function () {
    function DocumentViewComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DocumentViewComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DocumentViewComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewComponent.prototype, "size", void 0);
DocumentViewComponent.ɵfac = function DocumentViewComponent_Factory(t) { return new (t || DocumentViewComponent)(); };
DocumentViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DocumentViewComponent, selectors: [["ibm-icon-document-view"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDocumentView", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DocumentViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DocumentViewDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DocumentViewComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-document-view",
                template: "\n    <svg\n      ibmIconDocumentView\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DocumentViewComponent;
}());
var DocumentViewDirective = /** @class */ (function () {
    function DocumentViewDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DocumentView32", "filepath": "document--view/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z" } }], "name": "document--view", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DocumentView24", "filepath": "document--view/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z" } }], "name": "document--view", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DocumentView20", "filepath": "document--view/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z" } }], "name": "document--view", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DocumentView16", "filepath": "document--view/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z" } }], "name": "document--view", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H8V4h8v6a2.0058,2.0058,0,0,0,2,2h6v4h2V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,18,2H8A2.0058,2.0058,0,0,0,6,4V28a2.0058,2.0058,0,0,0,2,2h4ZM18,4.4,23.6,10H18Z\"></path></svg>"
            },
        };
    }
    DocumentViewDirective_1 = DocumentViewDirective;
    DocumentViewDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DocumentViewDirective_1.titleIdCounter++;
            title.setAttribute("id", "document-view-" + DocumentViewDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "document-view-" + DocumentViewDirective_1.titleIdCounter);
        }
    };
    var DocumentViewDirective_1;
    DocumentViewDirective.titleIdCounter = 0;
    DocumentViewDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DocumentViewDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DocumentViewDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DocumentViewDirective.prototype, "size", void 0);
    DocumentViewDirective = DocumentViewDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DocumentViewDirective);
DocumentViewDirective.ɵfac = function DocumentViewDirective_Factory(t) { return new (t || DocumentViewDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DocumentViewDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DocumentViewDirective, selectors: [["", "ibmIconDocumentView", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DocumentViewDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDocumentView]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DocumentViewDirective;
}());
var DocumentViewModule = /** @class */ (function () {
    function DocumentViewModule() {
    }
DocumentViewModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DocumentViewModule });
DocumentViewModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DocumentViewModule_Factory(t) { return new (t || DocumentViewModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DocumentViewModule, { declarations: [DocumentViewComponent, DocumentViewDirective], exports: [DocumentViewComponent, DocumentViewDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DocumentViewModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DocumentViewComponent,
                    DocumentViewDirective,
                ],
                exports: [
                    DocumentViewComponent,
                    DocumentViewDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return DocumentViewModule;
}());

export { DocumentViewComponent, DocumentViewDirective, DocumentViewModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtLXZpZXcuanMiLCJzb3VyY2VzIjpbImRvY3VtZW50LS12aWV3LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQU04QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFJTztBQUNQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztnREFZMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgSW5wdXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gJ0BjYXJib24vaWNvbi1oZWxwZXJzJztcblxudmFyIERvY3VtZW50Vmlld0NvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEb2N1bWVudFZpZXdDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERvY3VtZW50Vmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRG9jdW1lbnRWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBEb2N1bWVudFZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEb2N1bWVudFZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIERvY3VtZW50Vmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRG9jdW1lbnRWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRG9jdW1lbnRWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgRG9jdW1lbnRWaWV3Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi1kb2N1bWVudC12aWV3XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25Eb2N1bWVudFZpZXdcXG4gICAgICBbc2l6ZV09XFxcInNpemVcXFwiXFxuICAgICAgW2FyaWFMYWJlbF09XFxcImFyaWFMYWJlbFxcXCJcXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVxcXCJhcmlhTGFiZWxsZWRieVxcXCJcXG4gICAgICBbYXJpYUhpZGRlbl09XFxcImFyaWFIaWRkZW5cXFwiXFxuICAgICAgW3RpdGxlXT1cXFwidGl0bGVcXFwiXFxuICAgICAgW2lzRm9jdXNhYmxlXT1cXFwiZm9jdXNhYmxlXFxcIlxcbiAgICAgIFthdHRyLmNsYXNzXT1cXFwiaW5uZXJDbGFzc1xcXCI+XFxuICAgIDwvc3ZnPlxcbiAgXCJcbiAgICAgICAgfSlcbiAgICBdLCBEb2N1bWVudFZpZXdDb21wb25lbnQpO1xuICAgIHJldHVybiBEb2N1bWVudFZpZXdDb21wb25lbnQ7XG59KCkpO1xudmFyIERvY3VtZW50Vmlld0RpcmVjdGl2ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEb2N1bWVudFZpZXdEaXJlY3RpdmUoZWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICAgICAgICB0aGlzLmlzRm9jdXNhYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaWNvbnMgPSB7XG4gICAgICAgICAgICBcIjMyXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJEb2N1bWVudFZpZXczMlwiLCBcImZpbGVwYXRoXCI6IFwiZG9jdW1lbnQtLXZpZXcvMzIuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDMyLCBcImhlaWdodFwiOiAzMiB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwiY2lyY2xlXCIsIFwiYXR0cnNcIjogeyBcImN4XCI6IFwiMjJcIiwgXCJjeVwiOiBcIjI0XCIsIFwiclwiOiBcIjJcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJmaWxsXCI6IFwibm9uZVwiLCBcImRcIjogXCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZG9jdW1lbnQtLXZpZXdcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjRcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPjxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIGQ9XFxcIk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDAzOSw0LjAwMzksMCwwLDEsMjIsMjhabTAtNmEyLDIsMCwxLDAsMiwyQTIuMDAyNywyLjAwMjcsMCwwLDAsMjIsMjJaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTI5Ljc3NjksMjMuNDc4NUE4LjY0LDguNjQsMCwwLDAsMjIsMThhOC42NCw4LjY0LDAsMCwwLTcuNzc2OSw1LjQ3ODVMMTQsMjRsLjIyMzEuNTIxNUE4LjY0LDguNjQsMCwwLDAsMjIsMzBhOC42NCw4LjY0LDAsMCwwLDcuNzc2OS01LjQ3ODVMMzAsMjRaTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDQ1LDQuMDA0NSwwLDAsMSwyMiwyOFpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJEb2N1bWVudFZpZXcyNFwiLCBcImZpbGVwYXRoXCI6IFwiZG9jdW1lbnQtLXZpZXcvMjQuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDI0LCBcImhlaWdodFwiOiAyNCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwiY2lyY2xlXCIsIFwiYXR0cnNcIjogeyBcImN4XCI6IFwiMjJcIiwgXCJjeVwiOiBcIjI0XCIsIFwiclwiOiBcIjJcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJmaWxsXCI6IFwibm9uZVwiLCBcImRcIjogXCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZG9jdW1lbnQtLXZpZXdcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjRcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPjxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIGQ9XFxcIk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDAzOSw0LjAwMzksMCwwLDEsMjIsMjhabTAtNmEyLDIsMCwxLDAsMiwyQTIuMDAyNywyLjAwMjcsMCwwLDAsMjIsMjJaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTI5Ljc3NjksMjMuNDc4NUE4LjY0LDguNjQsMCwwLDAsMjIsMThhOC42NCw4LjY0LDAsMCwwLTcuNzc2OSw1LjQ3ODVMMTQsMjRsLjIyMzEuNTIxNUE4LjY0LDguNjQsMCwwLDAsMjIsMzBhOC42NCw4LjY0LDAsMCwwLDcuNzc2OS01LjQ3ODVMMzAsMjRaTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDQ1LDQuMDA0NSwwLDAsMSwyMiwyOFpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjIwXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJEb2N1bWVudFZpZXcyMFwiLCBcImZpbGVwYXRoXCI6IFwiZG9jdW1lbnQtLXZpZXcvMjAuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDIwLCBcImhlaWdodFwiOiAyMCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwiY2lyY2xlXCIsIFwiYXR0cnNcIjogeyBcImN4XCI6IFwiMjJcIiwgXCJjeVwiOiBcIjI0XCIsIFwiclwiOiBcIjJcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJmaWxsXCI6IFwibm9uZVwiLCBcImRcIjogXCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZG9jdW1lbnQtLXZpZXdcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjRcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPjxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIGQ9XFxcIk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDAzOSw0LjAwMzksMCwwLDEsMjIsMjhabTAtNmEyLDIsMCwxLDAsMiwyQTIuMDAyNywyLjAwMjcsMCwwLDAsMjIsMjJaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTI5Ljc3NjksMjMuNDc4NUE4LjY0LDguNjQsMCwwLDAsMjIsMThhOC42NCw4LjY0LDAsMCwwLTcuNzc2OSw1LjQ3ODVMMTQsMjRsLjIyMzEuNTIxNUE4LjY0LDguNjQsMCwwLDAsMjIsMzBhOC42NCw4LjY0LDAsMCwwLDcuNzc2OS01LjQ3ODVMMzAsMjRaTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDQ1LDQuMDA0NSwwLDAsMSwyMiwyOFpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjE2XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJEb2N1bWVudFZpZXcxNlwiLCBcImZpbGVwYXRoXCI6IFwiZG9jdW1lbnQtLXZpZXcvMTYuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDE2LCBcImhlaWdodFwiOiAxNiB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwiY2lyY2xlXCIsIFwiYXR0cnNcIjogeyBcImN4XCI6IFwiMjJcIiwgXCJjeVwiOiBcIjI0XCIsIFwiclwiOiBcIjJcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJmaWxsXCI6IFwibm9uZVwiLCBcImRcIjogXCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZG9jdW1lbnQtLXZpZXdcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjRcXFwiIHI9XFxcIjJcXFwiPjwvY2lyY2xlPjxwYXRoIGZpbGw9XFxcIm5vbmVcXFwiIGQ9XFxcIk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDAzOSw0LjAwMzksMCwwLDEsMjIsMjhabTAtNmEyLDIsMCwxLDAsMiwyQTIuMDAyNywyLjAwMjcsMCwwLDAsMjIsMjJaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTI5Ljc3NjksMjMuNDc4NUE4LjY0LDguNjQsMCwwLDAsMjIsMThhOC42NCw4LjY0LDAsMCwwLTcuNzc2OSw1LjQ3ODVMMTQsMjRsLjIyMzEuNTIxNUE4LjY0LDguNjQsMCwwLDAsMjIsMzBhOC42NCw4LjY0LDAsMCwwLDcuNzc2OS01LjQ3ODVMMzAsMjRaTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDQ1LDQuMDA0NSwwLDAsMSwyMiwyOFpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTIsMjhIOFY0aDh2NmEyLjAwNTgsMi4wMDU4LDAsMCwwLDIsMmg2djRoMlYxMGEuOTA5Mi45MDkyLDAsMCwwLS4zLS43bC03LTdBLjkwODcuOTA4NywwLDAsMCwxOCwySDhBMi4wMDU4LDIuMDA1OCwwLDAsMCw2LDRWMjhhMi4wMDU4LDIuMDA1OCwwLDAsMCwyLDJoNFpNMTgsNC40LDIzLjYsMTBIMThaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIERvY3VtZW50Vmlld0RpcmVjdGl2ZV8xID0gRG9jdW1lbnRWaWV3RGlyZWN0aXZlO1xuICAgIERvY3VtZW50Vmlld0RpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIERvY3VtZW50Vmlld0RpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICAgICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImRvY3VtZW50LXZpZXctXCIgKyBEb2N1bWVudFZpZXdEaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcImRvY3VtZW50LXZpZXctXCIgKyBEb2N1bWVudFZpZXdEaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBEb2N1bWVudFZpZXdEaXJlY3RpdmVfMTtcbiAgICBEb2N1bWVudFZpZXdEaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIERvY3VtZW50Vmlld0RpcmVjdGl2ZS5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBFbGVtZW50UmVmIH1cbiAgICBdOyB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERvY3VtZW50Vmlld0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRG9jdW1lbnRWaWV3RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBEb2N1bWVudFZpZXdEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEb2N1bWVudFZpZXdEaXJlY3RpdmUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIERvY3VtZW50Vmlld0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEb2N1bWVudFZpZXdEaXJlY3RpdmUucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBEb2N1bWVudFZpZXdEaXJlY3RpdmUgPSBEb2N1bWVudFZpZXdEaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25Eb2N1bWVudFZpZXddXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZl0pXG4gICAgXSwgRG9jdW1lbnRWaWV3RGlyZWN0aXZlKTtcbiAgICByZXR1cm4gRG9jdW1lbnRWaWV3RGlyZWN0aXZlO1xufSgpKTtcbnZhciBEb2N1bWVudFZpZXdNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRG9jdW1lbnRWaWV3TW9kdWxlKCkge1xuICAgIH1cbiAgICBEb2N1bWVudFZpZXdNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgRG9jdW1lbnRWaWV3Q29tcG9uZW50LFxuICAgICAgICAgICAgICAgIERvY3VtZW50Vmlld0RpcmVjdGl2ZSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgRG9jdW1lbnRWaWV3Q29tcG9uZW50LFxuICAgICAgICAgICAgICAgIERvY3VtZW50Vmlld0RpcmVjdGl2ZSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSlcbiAgICBdLCBEb2N1bWVudFZpZXdNb2R1bGUpO1xuICAgIHJldHVybiBEb2N1bWVudFZpZXdNb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBEb2N1bWVudFZpZXdDb21wb25lbnQsIERvY3VtZW50Vmlld0RpcmVjdGl2ZSwgRG9jdW1lbnRWaWV3TW9kdWxlIH07XG4iXX0=