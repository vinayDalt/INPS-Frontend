import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthWindowAutoComponent = /** @class */ (function () {
    function WatsonHealthWindowAutoComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowAutoComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowAutoComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoComponent.prototype, "size", void 0);
WatsonHealthWindowAutoComponent.ɵfac = function WatsonHealthWindowAutoComponent_Factory(t) { return new (t || WatsonHealthWindowAutoComponent)(); };
WatsonHealthWindowAutoComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthWindowAutoComponent, selectors: [["ibm-icon-watson-health-window-auto"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthWindowAuto", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthWindowAutoComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthWindowAutoDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowAutoComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-window-auto",
                template: "\n    <svg\n      ibmIconWatsonHealthWindowAuto\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthWindowAutoComponent;
}());
var WatsonHealthWindowAutoDirective = /** @class */ (function () {
    function WatsonHealthWindowAutoDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthWindowAuto32", "filepath": "watson-health/window--auto/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 7.04H9.55V10.04H7.55z", "transform": "rotate(-45 8.55 8.548)" } }, { "elem": "path", "attrs": { "d": "M21.96 7.55H24.96V9.55H21.96z", "transform": "rotate(-45 23.454 8.555)" } }, { "elem": "path", "attrs": { "d": "M22.45 21.95H24.45V24.95H22.45z", "transform": "rotate(-45 23.452 23.446)" } }, { "elem": "path", "attrs": { "d": "M7.05 22.45H10.05V24.45H7.05z", "transform": "rotate(-45 8.544 23.451)" } }, { "elem": "path", "attrs": { "d": "M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z" } }], "name": "window--auto", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z\"></path><path d=\"M7.55 7.04H9.55V10.04H7.55z\" transform=\"rotate(-45 8.55 8.548)\"></path><path d=\"M21.96 7.55H24.96V9.55H21.96z\" transform=\"rotate(-45 23.454 8.555)\"></path><path d=\"M22.45 21.95H24.45V24.95H22.45z\" transform=\"rotate(-45 23.452 23.446)\"></path><path d=\"M7.05 22.45H10.05V24.45H7.05z\" transform=\"rotate(-45 8.544 23.451)\"></path><path d=\"M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthWindowAuto24", "filepath": "watson-health/window--auto/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 7.04H9.55V10.04H7.55z", "transform": "rotate(-45 8.55 8.548)" } }, { "elem": "path", "attrs": { "d": "M21.96 7.55H24.96V9.55H21.96z", "transform": "rotate(-45 23.454 8.555)" } }, { "elem": "path", "attrs": { "d": "M22.45 21.95H24.45V24.95H22.45z", "transform": "rotate(-45 23.452 23.446)" } }, { "elem": "path", "attrs": { "d": "M7.05 22.45H10.05V24.45H7.05z", "transform": "rotate(-45 8.544 23.451)" } }, { "elem": "path", "attrs": { "d": "M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z" } }], "name": "window--auto", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z\"></path><path d=\"M7.55 7.04H9.55V10.04H7.55z\" transform=\"rotate(-45 8.55 8.548)\"></path><path d=\"M21.96 7.55H24.96V9.55H21.96z\" transform=\"rotate(-45 23.454 8.555)\"></path><path d=\"M22.45 21.95H24.45V24.95H22.45z\" transform=\"rotate(-45 23.452 23.446)\"></path><path d=\"M7.05 22.45H10.05V24.45H7.05z\" transform=\"rotate(-45 8.544 23.451)\"></path><path d=\"M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthWindowAuto20", "filepath": "watson-health/window--auto/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 7.04H9.55V10.04H7.55z", "transform": "rotate(-45 8.55 8.548)" } }, { "elem": "path", "attrs": { "d": "M21.96 7.55H24.96V9.55H21.96z", "transform": "rotate(-45 23.454 8.555)" } }, { "elem": "path", "attrs": { "d": "M22.45 21.95H24.45V24.95H22.45z", "transform": "rotate(-45 23.452 23.446)" } }, { "elem": "path", "attrs": { "d": "M7.05 22.45H10.05V24.45H7.05z", "transform": "rotate(-45 8.544 23.451)" } }, { "elem": "path", "attrs": { "d": "M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z" } }], "name": "window--auto", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z\"></path><path d=\"M7.55 7.04H9.55V10.04H7.55z\" transform=\"rotate(-45 8.55 8.548)\"></path><path d=\"M21.96 7.55H24.96V9.55H21.96z\" transform=\"rotate(-45 23.454 8.555)\"></path><path d=\"M22.45 21.95H24.45V24.95H22.45z\" transform=\"rotate(-45 23.452 23.446)\"></path><path d=\"M7.05 22.45H10.05V24.45H7.05z\" transform=\"rotate(-45 8.544 23.451)\"></path><path d=\"M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthWindowAuto16", "filepath": "watson-health/window--auto/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 7.04H9.55V10.04H7.55z", "transform": "rotate(-45 8.55 8.548)" } }, { "elem": "path", "attrs": { "d": "M21.96 7.55H24.96V9.55H21.96z", "transform": "rotate(-45 23.454 8.555)" } }, { "elem": "path", "attrs": { "d": "M22.45 21.95H24.45V24.95H22.45z", "transform": "rotate(-45 23.452 23.446)" } }, { "elem": "path", "attrs": { "d": "M7.05 22.45H10.05V24.45H7.05z", "transform": "rotate(-45 8.544 23.451)" } }, { "elem": "path", "attrs": { "d": "M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z" } }], "name": "window--auto", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 4H17V7H15zM25 15H28V17H25zM15 25H17V28H15zM4 15H7V17H4z\"></path><path d=\"M7.55 7.04H9.55V10.04H7.55z\" transform=\"rotate(-45 8.55 8.548)\"></path><path d=\"M21.96 7.55H24.96V9.55H21.96z\" transform=\"rotate(-45 23.454 8.555)\"></path><path d=\"M22.45 21.95H24.45V24.95H22.45z\" transform=\"rotate(-45 23.452 23.446)\"></path><path d=\"M7.05 22.45H10.05V24.45H7.05z\" transform=\"rotate(-45 8.544 23.451)\"></path><path d=\"M4 30H28V32H4zM4 0H28V2H4zM16 10a6 6 0 106 6A6 6 0 0016 10zm-4 6a4 4 0 014-4v8A4 4 0 0112 16z\"></path></svg>"
            },
        };
    }
    WatsonHealthWindowAutoDirective_1 = WatsonHealthWindowAutoDirective;
    WatsonHealthWindowAutoDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthWindowAutoDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-window-auto-" + WatsonHealthWindowAutoDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-window-auto-" + WatsonHealthWindowAutoDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthWindowAutoDirective_1;
    WatsonHealthWindowAutoDirective.titleIdCounter = 0;
    WatsonHealthWindowAutoDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowAutoDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowAutoDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowAutoDirective.prototype, "size", void 0);
    WatsonHealthWindowAutoDirective = WatsonHealthWindowAutoDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthWindowAutoDirective);
WatsonHealthWindowAutoDirective.ɵfac = function WatsonHealthWindowAutoDirective_Factory(t) { return new (t || WatsonHealthWindowAutoDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthWindowAutoDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthWindowAutoDirective, selectors: [["", "ibmIconWatsonHealthWindowAuto", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowAutoDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthWindowAuto]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthWindowAutoDirective;
}());
var WatsonHealthWindowAutoModule = /** @class */ (function () {
    function WatsonHealthWindowAutoModule() {
    }
WatsonHealthWindowAutoModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthWindowAutoModule });
WatsonHealthWindowAutoModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WatsonHealthWindowAutoModule_Factory(t) { return new (t || WatsonHealthWindowAutoModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthWindowAutoModule, { declarations: [WatsonHealthWindowAutoComponent, WatsonHealthWindowAutoDirective], exports: [WatsonHealthWindowAutoComponent, WatsonHealthWindowAutoDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowAutoModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthWindowAutoComponent,
                    WatsonHealthWindowAutoDirective,
                ],
                exports: [
                    WatsonHealthWindowAutoComponent,
                    WatsonHealthWindowAutoDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return WatsonHealthWindowAutoModule;
}());

export { WatsonHealthWindowAutoComponent, WatsonHealthWindowAutoDirective, WatsonHealthWindowAutoModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,