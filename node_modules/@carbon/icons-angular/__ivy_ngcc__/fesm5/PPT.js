import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var PptComponent = /** @class */ (function () {
    function PptComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PptComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PptComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptComponent.prototype, "size", void 0);
PptComponent.ɵfac = function PptComponent_Factory(t) { return new (t || PptComponent)(); };
PptComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PptComponent, selectors: [["ibm-icon-ppt"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconPpt", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function PptComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [PptDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PptComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-ppt",
                template: "\n    <svg\n      ibmIconPpt\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return PptComponent;
}());
var PptDirective = /** @class */ (function () {
    function PptDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Ppt32", "filepath": "PPT/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z" } }], "name": "PPT", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Ppt24", "filepath": "PPT/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z" } }], "name": "PPT", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Ppt20", "filepath": "PPT/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z" } }], "name": "PPT", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Ppt16", "filepath": "PPT/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z" } }], "name": "PPT", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22 11L25 11 25 23 27 23 27 11 30 11 30 9 22 9 22 11zM14 23H12V9h6a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H14zm0-7h4V10.9985H14zM4 23H2V9H8a2.002 2.002 0 012 2v5a2.002 2.002 0 01-2 2H4zm0-7H8V10.9985H4z\"></path></svg>"
            },
        };
    }
    PptDirective_1 = PptDirective;
    PptDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            PptDirective_1.titleIdCounter++;
            title.setAttribute("id", "ppt-" + PptDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "ppt-" + PptDirective_1.titleIdCounter);
        }
    };
    var PptDirective_1;
    PptDirective.titleIdCounter = 0;
    PptDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PptDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PptDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PptDirective.prototype, "size", void 0);
    PptDirective = PptDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], PptDirective);
PptDirective.ɵfac = function PptDirective_Factory(t) { return new (t || PptDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
PptDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PptDirective, selectors: [["", "ibmIconPpt", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PptDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconPpt]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return PptDirective;
}());
var PptModule = /** @class */ (function () {
    function PptModule() {
    }
PptModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PptModule });
PptModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PptModule_Factory(t) { return new (t || PptModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PptModule, { declarations: [PptComponent, PptDirective], exports: [PptComponent, PptDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PptModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    PptComponent,
                    PptDirective,
                ],
                exports: [
                    PptComponent,
                    PptDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return PptModule;
}());

export { PptComponent, PptDirective, PptModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,