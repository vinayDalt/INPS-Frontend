import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var TextLinkAnalysisComponent = /** @class */ (function () {
    function TextLinkAnalysisComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextLinkAnalysisComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextLinkAnalysisComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisComponent.prototype, "size", void 0);
TextLinkAnalysisComponent.ɵfac = function TextLinkAnalysisComponent_Factory(t) { return new (t || TextLinkAnalysisComponent)(); };
TextLinkAnalysisComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TextLinkAnalysisComponent, selectors: [["ibm-icon-text-link-analysis"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconTextLinkAnalysis", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function TextLinkAnalysisComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [TextLinkAnalysisDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextLinkAnalysisComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-text-link-analysis",
                template: "\n    <svg\n      ibmIconTextLinkAnalysis\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return TextLinkAnalysisComponent;
}());
var TextLinkAnalysisDirective = /** @class */ (function () {
    function TextLinkAnalysisDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "TextLinkAnalysis32", "filepath": "text-link--analysis/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z" } }, { "elem": "path", "attrs": { "d": "M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z" } }], "name": "text-link--analysis", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z\"></path><path d=\"M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "TextLinkAnalysis24", "filepath": "text-link--analysis/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z" } }, { "elem": "path", "attrs": { "d": "M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z" } }], "name": "text-link--analysis", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z\"></path><path d=\"M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "TextLinkAnalysis20", "filepath": "text-link--analysis/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z" } }, { "elem": "path", "attrs": { "d": "M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z" } }], "name": "text-link--analysis", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z\"></path><path d=\"M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "TextLinkAnalysis16", "filepath": "text-link--analysis/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z" } }, { "elem": "path", "attrs": { "d": "M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z" } }], "name": "text-link--analysis", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M8 10H16V12H8zM8 6H20V8H8zM8 2H20V4H8z\"></path><path d=\"M4.7111,28l5.6312-9.9961,7.4341,6.49A2,2,0,0,0,20.86,23.96l6.9707-10.4034-1.6622-1.1132-7,10.4472-.07.1035-7.4345-6.4907a2.0032,2.0032,0,0,0-3.0806.5308L4,25.1826V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z\"></path></svg>"
            },
        };
    }
    TextLinkAnalysisDirective_1 = TextLinkAnalysisDirective;
    TextLinkAnalysisDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            TextLinkAnalysisDirective_1.titleIdCounter++;
            title.setAttribute("id", "text-link-analysis-" + TextLinkAnalysisDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "text-link-analysis-" + TextLinkAnalysisDirective_1.titleIdCounter);
        }
    };
    var TextLinkAnalysisDirective_1;
    TextLinkAnalysisDirective.titleIdCounter = 0;
    TextLinkAnalysisDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextLinkAnalysisDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextLinkAnalysisDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextLinkAnalysisDirective.prototype, "size", void 0);
    TextLinkAnalysisDirective = TextLinkAnalysisDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], TextLinkAnalysisDirective);
TextLinkAnalysisDirective.ɵfac = function TextLinkAnalysisDirective_Factory(t) { return new (t || TextLinkAnalysisDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
TextLinkAnalysisDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TextLinkAnalysisDirective, selectors: [["", "ibmIconTextLinkAnalysis", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextLinkAnalysisDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconTextLinkAnalysis]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return TextLinkAnalysisDirective;
}());
var TextLinkAnalysisModule = /** @class */ (function () {
    function TextLinkAnalysisModule() {
    }
TextLinkAnalysisModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextLinkAnalysisModule });
TextLinkAnalysisModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextLinkAnalysisModule_Factory(t) { return new (t || TextLinkAnalysisModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextLinkAnalysisModule, { declarations: [TextLinkAnalysisComponent, TextLinkAnalysisDirective], exports: [TextLinkAnalysisComponent, TextLinkAnalysisDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextLinkAnalysisModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    TextLinkAnalysisComponent,
                    TextLinkAnalysisDirective,
                ],
                exports: [
                    TextLinkAnalysisComponent,
                    TextLinkAnalysisDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return TextLinkAnalysisModule;
}());

export { TextLinkAnalysisComponent, TextLinkAnalysisDirective, TextLinkAnalysisModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,