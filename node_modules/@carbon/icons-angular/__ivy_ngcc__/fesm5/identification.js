import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var IdentificationComponent = /** @class */ (function () {
    function IdentificationComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "size", void 0);
IdentificationComponent.ɵfac = function IdentificationComponent_Factory(t) { return new (t || IdentificationComponent)(); };
IdentificationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IdentificationComponent, selectors: [["ibm-icon-identification"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconIdentification", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function IdentificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [IdentificationDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IdentificationComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-identification",
                template: "\n    <svg\n      ibmIconIdentification\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return IdentificationComponent;
}());
var IdentificationDirective = /** @class */ (function () {
    function IdentificationDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Identification32", "filepath": "identification/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Identification24", "filepath": "identification/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Identification20", "filepath": "identification/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Identification16", "filepath": "identification/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
        };
    }
    IdentificationDirective_1 = IdentificationDirective;
    IdentificationDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            IdentificationDirective_1.titleIdCounter++;
            title.setAttribute("id", "identification-" + IdentificationDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "identification-" + IdentificationDirective_1.titleIdCounter);
        }
    };
    var IdentificationDirective_1;
    IdentificationDirective.titleIdCounter = 0;
    IdentificationDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "size", void 0);
    IdentificationDirective = IdentificationDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], IdentificationDirective);
IdentificationDirective.ɵfac = function IdentificationDirective_Factory(t) { return new (t || IdentificationDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
IdentificationDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IdentificationDirective, selectors: [["", "ibmIconIdentification", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IdentificationDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconIdentification]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return IdentificationDirective;
}());
var IdentificationModule = /** @class */ (function () {
    function IdentificationModule() {
    }
IdentificationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IdentificationModule });
IdentificationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IdentificationModule_Factory(t) { return new (t || IdentificationModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IdentificationModule, { declarations: [IdentificationComponent, IdentificationDirective], exports: [IdentificationComponent, IdentificationDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IdentificationModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IdentificationComponent,
                    IdentificationDirective,
                ],
                exports: [
                    IdentificationComponent,
                    IdentificationDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return IdentificationModule;
}());

export { IdentificationComponent, IdentificationDirective, IdentificationModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWRlbnRpZmljYXRpb24uanMiLCJzb3VyY2VzIjpbImlkZW50aWZpY2F0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQU1nQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRUFJTztBQUNQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztnREFZNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgSW5wdXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gJ0BjYXJib24vaWNvbi1oZWxwZXJzJztcblxudmFyIElkZW50aWZpY2F0aW9uQ29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIElkZW50aWZpY2F0aW9uQ29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBJZGVudGlmaWNhdGlvbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgSWRlbnRpZmljYXRpb25Db21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIElkZW50aWZpY2F0aW9uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgSWRlbnRpZmljYXRpb25Db21wb25lbnQucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIElkZW50aWZpY2F0aW9uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBJZGVudGlmaWNhdGlvbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIElkZW50aWZpY2F0aW9uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgSWRlbnRpZmljYXRpb25Db21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgQ29tcG9uZW50KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcImlibS1pY29uLWlkZW50aWZpY2F0aW9uXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25JZGVudGlmaWNhdGlvblxcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIElkZW50aWZpY2F0aW9uQ29tcG9uZW50KTtcbiAgICByZXR1cm4gSWRlbnRpZmljYXRpb25Db21wb25lbnQ7XG59KCkpO1xudmFyIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlKGVsZW1lbnRSZWYpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmID0gZWxlbWVudFJlZjtcbiAgICAgICAgdGhpcy5pc0ZvY3VzYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmljb25zID0ge1xuICAgICAgICAgICAgXCIzMlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiSWRlbnRpZmljYXRpb24zMlwiLCBcImZpbGVwYXRoXCI6IFwiaWRlbnRpZmljYXRpb24vMzIuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDMyLCBcImhlaWdodFwiOiAzMiB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI4LDZWMjZINFY2SDI4bTAtMkg0QTIsMiwwLDAsMCwyLDZWMjZhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjZhMiwyLDAsMCwwLTItMlpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTYgMTBIMTNWMTJINnpNNiAxNEgxMFYxNkg2ek0yMyAxOEgxN2EzIDMgMCAwMC0zIDN2MmgyVjIxYTEgMSAwIDAxMS0xaDZhMSAxIDAgMDExIDF2MmgyVjIxQTMgMyAwIDAwMjMgMTh6TTIwIDE3YTQgNCAwIDEwLTQtNEE0IDQgMCAwMDIwIDE3em0wLTZhMiAyIDAgMTEtMiAyQTIgMiAwIDAxMjAgMTF6XCIgfSB9XSwgXCJuYW1lXCI6IFwiaWRlbnRpZmljYXRpb25cIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOCw2VjI2SDRWNkgyOG0wLTJINEEyLDIsMCwwLDAsMiw2VjI2YTIsMiwwLDAsMCwyLDJIMjhhMiwyLDAsMCwwLDItMlY2YTIsMiwwLDAsMC0yLTJaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTYgMTBIMTNWMTJINnpNNiAxNEgxMFYxNkg2ek0yMyAxOEgxN2EzIDMgMCAwMC0zIDN2MmgyVjIxYTEgMSAwIDAxMS0xaDZhMSAxIDAgMDExIDF2MmgyVjIxQTMgMyAwIDAwMjMgMTh6TTIwIDE3YTQgNCAwIDEwLTQtNEE0IDQgMCAwMDIwIDE3em0wLTZhMiAyIDAgMTEtMiAyQTIgMiAwIDAxMjAgMTF6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJJZGVudGlmaWNhdGlvbjI0XCIsIFwiZmlsZXBhdGhcIjogXCJpZGVudGlmaWNhdGlvbi8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjgsNlYyNkg0VjZIMjhtMC0ySDRBMiwyLDAsMCwwLDIsNlYyNmEyLDIsMCwwLDAsMiwySDI4YTIsMiwwLDAsMCwyLTJWNmEyLDIsMCwwLDAtMi0yWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNiAxMEgxM1YxMkg2ek02IDE0SDEwVjE2SDZ6TTIzIDE4SDE3YTMgMyAwIDAwLTMgM3YyaDJWMjFhMSAxIDAgMDExLTFoNmExIDEgMCAwMTEgMXYyaDJWMjFBMyAzIDAgMDAyMyAxOHpNMjAgMTdhNCA0IDAgMTAtNC00QTQgNCAwIDAwMjAgMTd6bTAtNmEyIDIgMCAxMS0yIDJBMiAyIDAgMDEyMCAxMXpcIiB9IH1dLCBcIm5hbWVcIjogXCJpZGVudGlmaWNhdGlvblwiLCBcInNpemVcIjogMjQgfSwgXCJzaXplXCI6IDI0IH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIyNFxcXCIgaGVpZ2h0PVxcXCIyNFxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTI4LDZWMjZINFY2SDI4bTAtMkg0QTIsMiwwLDAsMCwyLDZWMjZhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjZhMiwyLDAsMCwwLTItMlpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNiAxMEgxM1YxMkg2ek02IDE0SDEwVjE2SDZ6TTIzIDE4SDE3YTMgMyAwIDAwLTMgM3YyaDJWMjFhMSAxIDAgMDExLTFoNmExIDEgMCAwMTEgMXYyaDJWMjFBMyAzIDAgMDAyMyAxOHpNMjAgMTdhNCA0IDAgMTAtNC00QTQgNCAwIDAwMjAgMTd6bTAtNmEyIDIgMCAxMS0yIDJBMiAyIDAgMDEyMCAxMXpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjBcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIklkZW50aWZpY2F0aW9uMjBcIiwgXCJmaWxlcGF0aFwiOiBcImlkZW50aWZpY2F0aW9uLzIwLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyMCwgXCJoZWlnaHRcIjogMjAgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yOCw2VjI2SDRWNkgyOG0wLTJINEEyLDIsMCwwLDAsMiw2VjI2YTIsMiwwLDAsMCwyLDJIMjhhMiwyLDAsMCwwLDItMlY2YTIsMiwwLDAsMC0yLTJaXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk02IDEwSDEzVjEySDZ6TTYgMTRIMTBWMTZINnpNMjMgMThIMTdhMyAzIDAgMDAtMyAzdjJoMlYyMWExIDEgMCAwMTEtMWg2YTEgMSAwIDAxMSAxdjJoMlYyMUEzIDMgMCAwMDIzIDE4ek0yMCAxN2E0IDQgMCAxMC00LTRBNCA0IDAgMDAyMCAxN3ptMC02YTIgMiAwIDExLTIgMkEyIDIgMCAwMTIwIDExelwiIH0gfV0sIFwibmFtZVwiOiBcImlkZW50aWZpY2F0aW9uXCIsIFwic2l6ZVwiOiAyMCB9LCBcInNpemVcIjogMjAgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjgsNlYyNkg0VjZIMjhtMC0ySDRBMiwyLDAsMCwwLDIsNlYyNmEyLDIsMCwwLDAsMiwySDI4YTIsMiwwLDAsMCwyLTJWNmEyLDIsMCwwLDAtMi0yWlxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk02IDEwSDEzVjEySDZ6TTYgMTRIMTBWMTZINnpNMjMgMThIMTdhMyAzIDAgMDAtMyAzdjJoMlYyMWExIDEgMCAwMTEtMWg2YTEgMSAwIDAxMSAxdjJoMlYyMUEzIDMgMCAwMDIzIDE4ek0yMCAxN2E0IDQgMCAxMC00LTRBNCA0IDAgMDAyMCAxN3ptMC02YTIgMiAwIDExLTIgMkEyIDIgMCAwMTIwIDExelxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIxNlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiSWRlbnRpZmljYXRpb24xNlwiLCBcImZpbGVwYXRoXCI6IFwiaWRlbnRpZmljYXRpb24vMTYuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDE2LCBcImhlaWdodFwiOiAxNiB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI4LDZWMjZINFY2SDI4bTAtMkg0QTIsMiwwLDAsMCwyLDZWMjZhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjZhMiwyLDAsMCwwLTItMlpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTYgMTBIMTNWMTJINnpNNiAxNEgxMFYxNkg2ek0yMyAxOEgxN2EzIDMgMCAwMC0zIDN2MmgyVjIxYTEgMSAwIDAxMS0xaDZhMSAxIDAgMDExIDF2MmgyVjIxQTMgMyAwIDAwMjMgMTh6TTIwIDE3YTQgNCAwIDEwLTQtNEE0IDQgMCAwMDIwIDE3em0wLTZhMiAyIDAgMTEtMiAyQTIgMiAwIDAxMjAgMTF6XCIgfSB9XSwgXCJuYW1lXCI6IFwiaWRlbnRpZmljYXRpb25cIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOCw2VjI2SDRWNkgyOG0wLTJINEEyLDIsMCwwLDAsMiw2VjI2YTIsMiwwLDAsMCwyLDJIMjhhMiwyLDAsMCwwLDItMlY2YTIsMiwwLDAsMC0yLTJaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTYgMTBIMTNWMTJINnpNNiAxNEgxMFYxNkg2ek0yMyAxOEgxN2EzIDMgMCAwMC0zIDN2MmgyVjIxYTEgMSAwIDAxMS0xaDZhMSAxIDAgMDExIDF2MmgyVjIxQTMgMyAwIDAwMjMgMTh6TTIwIDE3YTQgNCAwIDEwLTQtNEE0IDQgMCAwMDIwIDE3em0wLTZhMiAyIDAgMTEtMiAyQTIgMiAwIDAxMjAgMTF6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlXzEgPSBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZTtcbiAgICBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIrKztcbiAgICAgICAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiaWRlbnRpZmljYXRpb24tXCIgKyBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIFwiaWRlbnRpZmljYXRpb24tXCIgKyBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlXzE7XG4gICAgSWRlbnRpZmljYXRpb25EaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgSWRlbnRpZmljYXRpb25EaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlID0gSWRlbnRpZmljYXRpb25EaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25JZGVudGlmaWNhdGlvbl1cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBJZGVudGlmaWNhdGlvbkRpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlO1xufSgpKTtcbnZhciBJZGVudGlmaWNhdGlvbk1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBJZGVudGlmaWNhdGlvbk1vZHVsZSgpIHtcbiAgICB9XG4gICAgSWRlbnRpZmljYXRpb25Nb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgSWRlbnRpZmljYXRpb25Db21wb25lbnQsXG4gICAgICAgICAgICAgICAgSWRlbnRpZmljYXRpb25EaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIElkZW50aWZpY2F0aW9uQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIElkZW50aWZpY2F0aW9uRGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIElkZW50aWZpY2F0aW9uTW9kdWxlKTtcbiAgICByZXR1cm4gSWRlbnRpZmljYXRpb25Nb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBJZGVudGlmaWNhdGlvbkNvbXBvbmVudCwgSWRlbnRpZmljYXRpb25EaXJlY3RpdmUsIElkZW50aWZpY2F0aW9uTW9kdWxlIH07XG4iXX0=