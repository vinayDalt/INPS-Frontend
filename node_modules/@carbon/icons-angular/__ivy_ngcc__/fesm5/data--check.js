import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DataCheckComponent = /** @class */ (function () {
    function DataCheckComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DataCheckComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DataCheckComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckComponent.prototype, "size", void 0);
DataCheckComponent.ɵfac = function DataCheckComponent_Factory(t) { return new (t || DataCheckComponent)(); };
DataCheckComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataCheckComponent, selectors: [["ibm-icon-data-check"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDataCheck", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DataCheckComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DataCheckDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataCheckComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-data-check",
                template: "\n    <svg\n      ibmIconDataCheck\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DataCheckComponent;
}());
var DataCheckDirective = /** @class */ (function () {
    function DataCheckDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DataCheck32", "filepath": "data--check/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "8", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "16", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "24", "r": "1" } }, { "elem": "path", "attrs": { "d": "M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z" } }], "name": "data--check", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z\"></path><circle cx=\"11\" cy=\"8\" r=\"1\"></circle><circle cx=\"11\" cy=\"16\" r=\"1\"></circle><circle cx=\"11\" cy=\"24\" r=\"1\"></circle><path d=\"M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DataCheck24", "filepath": "data--check/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "8", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "16", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "24", "r": "1" } }, { "elem": "path", "attrs": { "d": "M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z" } }], "name": "data--check", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z\"></path><circle cx=\"11\" cy=\"8\" r=\"1\"></circle><circle cx=\"11\" cy=\"16\" r=\"1\"></circle><circle cx=\"11\" cy=\"24\" r=\"1\"></circle><path d=\"M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DataCheck20", "filepath": "data--check/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "8", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "16", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "24", "r": "1" } }, { "elem": "path", "attrs": { "d": "M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z" } }], "name": "data--check", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z\"></path><circle cx=\"11\" cy=\"8\" r=\"1\"></circle><circle cx=\"11\" cy=\"16\" r=\"1\"></circle><circle cx=\"11\" cy=\"24\" r=\"1\"></circle><path d=\"M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DataCheck16", "filepath": "data--check/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "8", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "16", "r": "1" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "24", "r": "1" } }, { "elem": "path", "attrs": { "d": "M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z" } }], "name": "data--check", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 27.18L20.41 24.59 19 26 23 30 30 23 28.59 21.59 23 27.18z\"></path><circle cx=\"11\" cy=\"8\" r=\"1\"></circle><circle cx=\"11\" cy=\"16\" r=\"1\"></circle><circle cx=\"11\" cy=\"24\" r=\"1\"></circle><path d=\"M24,3H8A2,2,0,0,0,6,5V27a2,2,0,0,0,2,2h8V27H8V21H26V5A2,2,0,0,0,24,3Zm0,16H8V13H24Zm0-8H8V5H24Z\"></path></svg>"
            },
        };
    }
    DataCheckDirective_1 = DataCheckDirective;
    DataCheckDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DataCheckDirective_1.titleIdCounter++;
            title.setAttribute("id", "data-check-" + DataCheckDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "data-check-" + DataCheckDirective_1.titleIdCounter);
        }
    };
    var DataCheckDirective_1;
    DataCheckDirective.titleIdCounter = 0;
    DataCheckDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DataCheckDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DataCheckDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DataCheckDirective.prototype, "size", void 0);
    DataCheckDirective = DataCheckDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DataCheckDirective);
DataCheckDirective.ɵfac = function DataCheckDirective_Factory(t) { return new (t || DataCheckDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DataCheckDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataCheckDirective, selectors: [["", "ibmIconDataCheck", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataCheckDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDataCheck]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DataCheckDirective;
}());
var DataCheckModule = /** @class */ (function () {
    function DataCheckModule() {
    }
DataCheckModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DataCheckModule });
DataCheckModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DataCheckModule_Factory(t) { return new (t || DataCheckModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataCheckModule, { declarations: [DataCheckComponent, DataCheckDirective], exports: [DataCheckComponent, DataCheckDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataCheckModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DataCheckComponent,
                    DataCheckDirective,
                ],
                exports: [
                    DataCheckComponent,
                    DataCheckDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return DataCheckModule;
}());

export { DataCheckComponent, DataCheckDirective, DataCheckModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,