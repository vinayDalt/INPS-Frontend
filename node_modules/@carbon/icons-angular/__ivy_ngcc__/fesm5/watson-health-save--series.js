import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthSaveSeriesComponent = /** @class */ (function () {
    function WatsonHealthSaveSeriesComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthSaveSeriesComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthSaveSeriesComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesComponent.prototype, "size", void 0);
WatsonHealthSaveSeriesComponent.ɵfac = function WatsonHealthSaveSeriesComponent_Factory(t) { return new (t || WatsonHealthSaveSeriesComponent)(); };
WatsonHealthSaveSeriesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthSaveSeriesComponent, selectors: [["ibm-icon-watson-health-save-series"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthSaveSeries", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthSaveSeriesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthSaveSeriesDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthSaveSeriesComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-save-series",
                template: "\n    <svg\n      ibmIconWatsonHealthSaveSeries\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthSaveSeriesComponent;
}());
var WatsonHealthSaveSeriesDirective = /** @class */ (function () {
    function WatsonHealthSaveSeriesDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthSaveSeries32", "filepath": "watson-health/save--series/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z" } }, { "elem": "path", "attrs": { "d": "M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z" } }], "name": "save--series", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z\"></path><path d=\"M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z\"></path><path d=\"M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthSaveSeries24", "filepath": "watson-health/save--series/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z" } }, { "elem": "path", "attrs": { "d": "M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z" } }], "name": "save--series", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z\"></path><path d=\"M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z\"></path><path d=\"M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthSaveSeries20", "filepath": "watson-health/save--series/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z" } }, { "elem": "path", "attrs": { "d": "M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z" } }], "name": "save--series", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z\"></path><path d=\"M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z\"></path><path d=\"M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthSaveSeries16", "filepath": "watson-health/save--series/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z" } }, { "elem": "path", "attrs": { "d": "M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z" } }], "name": "save--series", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.56,15.1l-3.48-4.35A2,2,0,0,0,16.52,10H4a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V16.35A2,2,0,0,0,21.56,15.1ZM9,12h6v3H9Zm6,16H9V22h6Zm2,0V22a2,2,0,0,0-2-2H9a2,2,0,0,0-2,2v6H4V12H7v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V12.6l3,3.75V28Z\"></path><path d=\"M27,21H25V7H11V5H25a2,2,0,0,1,2,2Z\"></path><path d=\"M32,14H30V2H18V0H30a2,2,0,0,1,2,2Z\"></path></svg>"
            },
        };
    }
    WatsonHealthSaveSeriesDirective_1 = WatsonHealthSaveSeriesDirective;
    WatsonHealthSaveSeriesDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthSaveSeriesDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-save-series-" + WatsonHealthSaveSeriesDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-save-series-" + WatsonHealthSaveSeriesDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthSaveSeriesDirective_1;
    WatsonHealthSaveSeriesDirective.titleIdCounter = 0;
    WatsonHealthSaveSeriesDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthSaveSeriesDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthSaveSeriesDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthSaveSeriesDirective.prototype, "size", void 0);
    WatsonHealthSaveSeriesDirective = WatsonHealthSaveSeriesDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthSaveSeriesDirective);
WatsonHealthSaveSeriesDirective.ɵfac = function WatsonHealthSaveSeriesDirective_Factory(t) { return new (t || WatsonHealthSaveSeriesDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthSaveSeriesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthSaveSeriesDirective, selectors: [["", "ibmIconWatsonHealthSaveSeries", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthSaveSeriesDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthSaveSeries]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthSaveSeriesDirective;
}());
var WatsonHealthSaveSeriesModule = /** @class */ (function () {
    function WatsonHealthSaveSeriesModule() {
    }
WatsonHealthSaveSeriesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthSaveSeriesModule });
WatsonHealthSaveSeriesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WatsonHealthSaveSeriesModule_Factory(t) { return new (t || WatsonHealthSaveSeriesModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthSaveSeriesModule, { declarations: [WatsonHealthSaveSeriesComponent, WatsonHealthSaveSeriesDirective], exports: [WatsonHealthSaveSeriesComponent, WatsonHealthSaveSeriesDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthSaveSeriesModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthSaveSeriesComponent,
                    WatsonHealthSaveSeriesDirective,
                ],
                exports: [
                    WatsonHealthSaveSeriesComponent,
                    WatsonHealthSaveSeriesDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return WatsonHealthSaveSeriesModule;
}());

export { WatsonHealthSaveSeriesComponent, WatsonHealthSaveSeriesDirective, WatsonHealthSaveSeriesModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,