import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var ScatterMatrixComponent = /** @class */ (function () {
    function ScatterMatrixComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ScatterMatrixComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ScatterMatrixComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixComponent.prototype, "size", void 0);
ScatterMatrixComponent.ɵfac = function ScatterMatrixComponent_Factory(t) { return new (t || ScatterMatrixComponent)(); };
ScatterMatrixComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScatterMatrixComponent, selectors: [["ibm-icon-scatter-matrix"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconScatterMatrix", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function ScatterMatrixComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [ScatterMatrixDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScatterMatrixComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-scatter-matrix",
                template: "\n    <svg\n      ibmIconScatterMatrix\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ScatterMatrixComponent;
}());
var ScatterMatrixDirective = /** @class */ (function () {
    function ScatterMatrixDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "ScatterMatrix32", "filepath": "scatter-matrix/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "9.5", "cy": "9.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "9.5", "cy": "22.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "22.5", "cy": "22.5", "r": "2.5" } }, { "elem": "path", "attrs": { "d": "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z" } }], "name": "scatter-matrix", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"9.5\" cy=\"9.5\" r=\"2.5\"></circle><circle cx=\"9.5\" cy=\"22.5\" r=\"2.5\"></circle><circle cx=\"22.5\" cy=\"22.5\" r=\"2.5\"></circle><path d=\"M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "ScatterMatrix24", "filepath": "scatter-matrix/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "9.5", "cy": "9.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "9.5", "cy": "22.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "22.5", "cy": "22.5", "r": "2.5" } }, { "elem": "path", "attrs": { "d": "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z" } }], "name": "scatter-matrix", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"9.5\" cy=\"9.5\" r=\"2.5\"></circle><circle cx=\"9.5\" cy=\"22.5\" r=\"2.5\"></circle><circle cx=\"22.5\" cy=\"22.5\" r=\"2.5\"></circle><path d=\"M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "ScatterMatrix20", "filepath": "scatter-matrix/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "9.5", "cy": "9.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "9.5", "cy": "22.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "22.5", "cy": "22.5", "r": "2.5" } }, { "elem": "path", "attrs": { "d": "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z" } }], "name": "scatter-matrix", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"9.5\" cy=\"9.5\" r=\"2.5\"></circle><circle cx=\"9.5\" cy=\"22.5\" r=\"2.5\"></circle><circle cx=\"22.5\" cy=\"22.5\" r=\"2.5\"></circle><path d=\"M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "ScatterMatrix16", "filepath": "scatter-matrix/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "9.5", "cy": "9.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "9.5", "cy": "22.5", "r": "2.5" } }, { "elem": "circle", "attrs": { "cx": "22.5", "cy": "22.5", "r": "2.5" } }, { "elem": "path", "attrs": { "d": "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z" } }], "name": "scatter-matrix", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"9.5\" cy=\"9.5\" r=\"2.5\"></circle><circle cx=\"9.5\" cy=\"22.5\" r=\"2.5\"></circle><circle cx=\"22.5\" cy=\"22.5\" r=\"2.5\"></circle><path d=\"M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,13H17V4H28ZM15,4V15H4V4ZM4,17H15V28H4ZM17,28V17H28V28Z\"></path></svg>"
            },
        };
    }
    ScatterMatrixDirective_1 = ScatterMatrixDirective;
    ScatterMatrixDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ScatterMatrixDirective_1.titleIdCounter++;
            title.setAttribute("id", "scatter-matrix-" + ScatterMatrixDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "scatter-matrix-" + ScatterMatrixDirective_1.titleIdCounter);
        }
    };
    var ScatterMatrixDirective_1;
    ScatterMatrixDirective.titleIdCounter = 0;
    ScatterMatrixDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ScatterMatrixDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ScatterMatrixDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ScatterMatrixDirective.prototype, "size", void 0);
    ScatterMatrixDirective = ScatterMatrixDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], ScatterMatrixDirective);
ScatterMatrixDirective.ɵfac = function ScatterMatrixDirective_Factory(t) { return new (t || ScatterMatrixDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ScatterMatrixDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ScatterMatrixDirective, selectors: [["", "ibmIconScatterMatrix", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScatterMatrixDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconScatterMatrix]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ScatterMatrixDirective;
}());
var ScatterMatrixModule = /** @class */ (function () {
    function ScatterMatrixModule() {
    }
ScatterMatrixModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScatterMatrixModule });
ScatterMatrixModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScatterMatrixModule_Factory(t) { return new (t || ScatterMatrixModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScatterMatrixModule, { declarations: [ScatterMatrixComponent, ScatterMatrixDirective], exports: [ScatterMatrixComponent, ScatterMatrixDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScatterMatrixModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ScatterMatrixComponent,
                    ScatterMatrixDirective,
                ],
                exports: [
                    ScatterMatrixComponent,
                    ScatterMatrixDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return ScatterMatrixModule;
}());

export { ScatterMatrixComponent, ScatterMatrixDirective, ScatterMatrixModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,