import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var QuadrantPlotComponent = /** @class */ (function () {
    function QuadrantPlotComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QuadrantPlotComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QuadrantPlotComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotComponent.prototype, "size", void 0);
QuadrantPlotComponent.ɵfac = function QuadrantPlotComponent_Factory(t) { return new (t || QuadrantPlotComponent)(); };
QuadrantPlotComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuadrantPlotComponent, selectors: [["ibm-icon-quadrant-plot"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconQuadrantPlot", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function QuadrantPlotComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [QuadrantPlotDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuadrantPlotComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-quadrant-plot",
                template: "\n    <svg\n      ibmIconQuadrantPlot\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return QuadrantPlotComponent;
}());
var QuadrantPlotDirective = /** @class */ (function () {
    function QuadrantPlotDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "QuadrantPlot32", "filepath": "quadrant-plot/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z" } }, { "elem": "path", "attrs": { "d": "M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "21", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "22", "cy": "28", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "24", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "4", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "4", "r": "2" } }], "name": "quadrant-plot", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z\"></path><path d=\"M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle><circle cx=\"11\" cy=\"21\" r=\"2\"></circle><circle cx=\"21\" cy=\"21\" r=\"2\"></circle><circle cx=\"22\" cy=\"28\" r=\"2\"></circle><circle cx=\"28\" cy=\"24\" r=\"2\"></circle><circle cx=\"4\" cy=\"11\" r=\"2\"></circle><circle cx=\"28\" cy=\"4\" r=\"2\"></circle></svg>"
            },
            "24": {
                metadata: { "moduleName": "QuadrantPlot24", "filepath": "quadrant-plot/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z" } }, { "elem": "path", "attrs": { "d": "M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "21", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "22", "cy": "28", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "24", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "4", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "4", "r": "2" } }], "name": "quadrant-plot", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z\"></path><path d=\"M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle><circle cx=\"11\" cy=\"21\" r=\"2\"></circle><circle cx=\"21\" cy=\"21\" r=\"2\"></circle><circle cx=\"22\" cy=\"28\" r=\"2\"></circle><circle cx=\"28\" cy=\"24\" r=\"2\"></circle><circle cx=\"4\" cy=\"11\" r=\"2\"></circle><circle cx=\"28\" cy=\"4\" r=\"2\"></circle></svg>"
            },
            "20": {
                metadata: { "moduleName": "QuadrantPlot20", "filepath": "quadrant-plot/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z" } }, { "elem": "path", "attrs": { "d": "M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "21", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "22", "cy": "28", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "24", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "4", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "4", "r": "2" } }], "name": "quadrant-plot", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z\"></path><path d=\"M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle><circle cx=\"11\" cy=\"21\" r=\"2\"></circle><circle cx=\"21\" cy=\"21\" r=\"2\"></circle><circle cx=\"22\" cy=\"28\" r=\"2\"></circle><circle cx=\"28\" cy=\"24\" r=\"2\"></circle><circle cx=\"4\" cy=\"11\" r=\"2\"></circle><circle cx=\"28\" cy=\"4\" r=\"2\"></circle></svg>"
            },
            "16": {
                metadata: { "moduleName": "QuadrantPlot16", "filepath": "quadrant-plot/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z" } }, { "elem": "path", "attrs": { "d": "M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "21", "cy": "21", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "22", "cy": "28", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "24", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "4", "cy": "11", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "4", "r": "2" } }], "name": "quadrant-plot", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 15L17 15 17 2 15 2 15 15 2 15 2 17 15 17 15 30 17 30 17 17 30 17 30 15z\"></path><path d=\"M5 30a3 3 0 113-3A3.0033 3.0033 0 015 30zm0-4a1 1 0 101 1A1.001 1.001 0 005 26zM8 8a3 3 0 113-3A3.0033 3.0033 0 018 8zM8 4A1 1 0 109 5 1.001 1.001 0 008 4zM22 13a3 3 0 113-3A3.0033 3.0033 0 0122 13zm0-4a1 1 0 101 1A1.001 1.001 0 0022 9z\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle><circle cx=\"11\" cy=\"21\" r=\"2\"></circle><circle cx=\"21\" cy=\"21\" r=\"2\"></circle><circle cx=\"22\" cy=\"28\" r=\"2\"></circle><circle cx=\"28\" cy=\"24\" r=\"2\"></circle><circle cx=\"4\" cy=\"11\" r=\"2\"></circle><circle cx=\"28\" cy=\"4\" r=\"2\"></circle></svg>"
            },
        };
    }
    QuadrantPlotDirective_1 = QuadrantPlotDirective;
    QuadrantPlotDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            QuadrantPlotDirective_1.titleIdCounter++;
            title.setAttribute("id", "quadrant-plot-" + QuadrantPlotDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "quadrant-plot-" + QuadrantPlotDirective_1.titleIdCounter);
        }
    };
    var QuadrantPlotDirective_1;
    QuadrantPlotDirective.titleIdCounter = 0;
    QuadrantPlotDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QuadrantPlotDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QuadrantPlotDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QuadrantPlotDirective.prototype, "size", void 0);
    QuadrantPlotDirective = QuadrantPlotDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], QuadrantPlotDirective);
QuadrantPlotDirective.ɵfac = function QuadrantPlotDirective_Factory(t) { return new (t || QuadrantPlotDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
QuadrantPlotDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: QuadrantPlotDirective, selectors: [["", "ibmIconQuadrantPlot", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuadrantPlotDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconQuadrantPlot]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return QuadrantPlotDirective;
}());
var QuadrantPlotModule = /** @class */ (function () {
    function QuadrantPlotModule() {
    }
QuadrantPlotModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuadrantPlotModule });
QuadrantPlotModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QuadrantPlotModule_Factory(t) { return new (t || QuadrantPlotModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuadrantPlotModule, { declarations: [QuadrantPlotComponent, QuadrantPlotDirective], exports: [QuadrantPlotComponent, QuadrantPlotDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuadrantPlotModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    QuadrantPlotComponent,
                    QuadrantPlotDirective,
                ],
                exports: [
                    QuadrantPlotComponent,
                    QuadrantPlotDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return QuadrantPlotModule;
}());

export { QuadrantPlotComponent, QuadrantPlotDirective, QuadrantPlotModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,