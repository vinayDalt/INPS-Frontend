import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var MagicWandFilledComponent = /** @class */ (function () {
    function MagicWandFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledComponent.prototype, "size", void 0);
MagicWandFilledComponent.ɵfac = function MagicWandFilledComponent_Factory(t) { return new (t || MagicWandFilledComponent)(); };
MagicWandFilledComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MagicWandFilledComponent, selectors: [["ibm-icon-magic-wand-filled"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconMagicWandFilled", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function MagicWandFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [MagicWandFilledDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MagicWandFilledComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-magic-wand-filled",
                template: "\n    <svg\n      ibmIconMagicWandFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MagicWandFilledComponent;
}());
var MagicWandFilledDirective = /** @class */ (function () {
    function MagicWandFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "MagicWandFilled32", "filepath": "magic-wand--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "MagicWandFilled24", "filepath": "magic-wand--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "MagicWandFilled20", "filepath": "magic-wand--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "MagicWandFilled16", "filepath": "magic-wand--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
        };
    }
    MagicWandFilledDirective_1 = MagicWandFilledDirective;
    MagicWandFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            MagicWandFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "magic-wand-filled-" + MagicWandFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "magic-wand-filled-" + MagicWandFilledDirective_1.titleIdCounter);
        }
    };
    var MagicWandFilledDirective_1;
    MagicWandFilledDirective.titleIdCounter = 0;
    MagicWandFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandFilledDirective.prototype, "size", void 0);
    MagicWandFilledDirective = MagicWandFilledDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], MagicWandFilledDirective);
MagicWandFilledDirective.ɵfac = function MagicWandFilledDirective_Factory(t) { return new (t || MagicWandFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MagicWandFilledDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MagicWandFilledDirective, selectors: [["", "ibmIconMagicWandFilled", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MagicWandFilledDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconMagicWandFilled]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MagicWandFilledDirective;
}());
var MagicWandFilledModule = /** @class */ (function () {
    function MagicWandFilledModule() {
    }
MagicWandFilledModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MagicWandFilledModule });
MagicWandFilledModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MagicWandFilledModule_Factory(t) { return new (t || MagicWandFilledModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MagicWandFilledModule, { declarations: [MagicWandFilledComponent, MagicWandFilledDirective], exports: [MagicWandFilledComponent, MagicWandFilledDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MagicWandFilledModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MagicWandFilledComponent,
                    MagicWandFilledDirective,
                ],
                exports: [
                    MagicWandFilledComponent,
                    MagicWandFilledDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return MagicWandFilledModule;
}());

export { MagicWandFilledComponent, MagicWandFilledDirective, MagicWandFilledModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,