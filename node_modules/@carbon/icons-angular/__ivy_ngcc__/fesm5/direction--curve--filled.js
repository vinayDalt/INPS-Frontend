import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DirectionCurveFilledComponent = /** @class */ (function () {
    function DirectionCurveFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionCurveFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionCurveFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledComponent.prototype, "size", void 0);
DirectionCurveFilledComponent.ɵfac = function DirectionCurveFilledComponent_Factory(t) { return new (t || DirectionCurveFilledComponent)(); };
DirectionCurveFilledComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DirectionCurveFilledComponent, selectors: [["ibm-icon-direction-curve-filled"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDirectionCurveFilled", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DirectionCurveFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DirectionCurveFilledDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionCurveFilledComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-direction-curve-filled",
                template: "\n    <svg\n      ibmIconDirectionCurveFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DirectionCurveFilledComponent;
}());
var DirectionCurveFilledDirective = /** @class */ (function () {
    function DirectionCurveFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DirectionCurveFilled32", "filepath": "direction--curve--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z", "data-icon-path": "inner-path" } }], "name": "direction--curve--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\"></path><path fill=\"none\" d=\"M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DirectionCurveFilled24", "filepath": "direction--curve--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z", "data-icon-path": "inner-path" } }], "name": "direction--curve--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\"></path><path fill=\"none\" d=\"M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DirectionCurveFilled20", "filepath": "direction--curve--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z", "data-icon-path": "inner-path" } }], "name": "direction--curve--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\"></path><path fill=\"none\" d=\"M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DirectionCurveFilled16", "filepath": "direction--curve--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z", "data-icon-path": "inner-path" } }], "name": "direction--curve--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\"></path><path fill=\"none\" d=\"M22.5859,13.4141,18,8.8281v5.7686a5.0206,5.0206,0,0,1-1.0957,3.124l-2.2471,2.8086A3.01,3.01,0,0,0,14,22.4033V27H12V22.4033a5.0206,5.0206,0,0,1,1.0957-3.124l2.2471-2.8086A3.01,3.01,0,0,0,16,14.5967V8.8281l-4.5859,4.586L10,12l7-7,7,7Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
        };
    }
    DirectionCurveFilledDirective_1 = DirectionCurveFilledDirective;
    DirectionCurveFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DirectionCurveFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "direction-curve-filled-" + DirectionCurveFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "direction-curve-filled-" + DirectionCurveFilledDirective_1.titleIdCounter);
        }
    };
    var DirectionCurveFilledDirective_1;
    DirectionCurveFilledDirective.titleIdCounter = 0;
    DirectionCurveFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionCurveFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionCurveFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionCurveFilledDirective.prototype, "size", void 0);
    DirectionCurveFilledDirective = DirectionCurveFilledDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DirectionCurveFilledDirective);
DirectionCurveFilledDirective.ɵfac = function DirectionCurveFilledDirective_Factory(t) { return new (t || DirectionCurveFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DirectionCurveFilledDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DirectionCurveFilledDirective, selectors: [["", "ibmIconDirectionCurveFilled", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionCurveFilledDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDirectionCurveFilled]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DirectionCurveFilledDirective;
}());
var DirectionCurveFilledModule = /** @class */ (function () {
    function DirectionCurveFilledModule() {
    }
DirectionCurveFilledModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DirectionCurveFilledModule });
DirectionCurveFilledModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DirectionCurveFilledModule_Factory(t) { return new (t || DirectionCurveFilledModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DirectionCurveFilledModule, { declarations: [DirectionCurveFilledComponent, DirectionCurveFilledDirective], exports: [DirectionCurveFilledComponent, DirectionCurveFilledDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionCurveFilledModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DirectionCurveFilledComponent,
                    DirectionCurveFilledDirective,
                ],
                exports: [
                    DirectionCurveFilledComponent,
                    DirectionCurveFilledDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return DirectionCurveFilledModule;
}());

export { DirectionCurveFilledComponent, DirectionCurveFilledDirective, DirectionCurveFilledModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aW9uLS1jdXJ2ZS0tZmlsbGVkLmpzIiwic291cmNlcyI6WyJkaXJlY3Rpb24tLWN1cnZlLS1maWxsZWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtGQUlPO0FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O2dEQVltQztBQUNuQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbnB1dCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBEaXJlY3RpdmUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSAnQGNhcmJvbi9pY29uLWhlbHBlcnMnO1xuXG52YXIgRGlyZWN0aW9uQ3VydmVGaWxsZWRDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGlyZWN0aW9uQ3VydmVGaWxsZWRDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERpcmVjdGlvbkN1cnZlRmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgRGlyZWN0aW9uQ3VydmVGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZENvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgRGlyZWN0aW9uQ3VydmVGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERpcmVjdGlvbkN1cnZlRmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRGlyZWN0aW9uQ3VydmVGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBEaXJlY3Rpb25DdXJ2ZUZpbGxlZENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaWJtLWljb24tZGlyZWN0aW9uLWN1cnZlLWZpbGxlZFwiLFxuICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxzdmdcXG4gICAgICBpYm1JY29uRGlyZWN0aW9uQ3VydmVGaWxsZWRcXG4gICAgICBbc2l6ZV09XFxcInNpemVcXFwiXFxuICAgICAgW2FyaWFMYWJlbF09XFxcImFyaWFMYWJlbFxcXCJcXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVxcXCJhcmlhTGFiZWxsZWRieVxcXCJcXG4gICAgICBbYXJpYUhpZGRlbl09XFxcImFyaWFIaWRkZW5cXFwiXFxuICAgICAgW3RpdGxlXT1cXFwidGl0bGVcXFwiXFxuICAgICAgW2lzRm9jdXNhYmxlXT1cXFwiZm9jdXNhYmxlXFxcIlxcbiAgICAgIFthdHRyLmNsYXNzXT1cXFwiaW5uZXJDbGFzc1xcXCI+XFxuICAgIDwvc3ZnPlxcbiAgXCJcbiAgICAgICAgfSlcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZENvbXBvbmVudCk7XG4gICAgcmV0dXJuIERpcmVjdGlvbkN1cnZlRmlsbGVkQ29tcG9uZW50O1xufSgpKTtcbnZhciBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkRpcmVjdGlvbkN1cnZlRmlsbGVkMzJcIiwgXCJmaWxlcGF0aFwiOiBcImRpcmVjdGlvbi0tY3VydmUtLWZpbGxlZC8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjgsMkg0QTIsMiwwLDAsMCwyLDRWMjhhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjRBMiwyLDAsMCwwLDI4LDJaTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImZpbGxcIjogXCJub25lXCIsIFwiZFwiOiBcIk0yMi41ODU5LDEzLjQxNDEsMTgsOC44MjgxdjUuNzY4NmE1LjAyMDYsNS4wMjA2LDAsMCwxLTEuMDk1NywzLjEyNGwtMi4yNDcxLDIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTQsMjIuNDAzM1YyN0gxMlYyMi40MDMzYTUuMDIwNiw1LjAyMDYsMCwwLDEsMS4wOTU3LTMuMTI0bDIuMjQ3MS0yLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE2LDE0LjU5NjdWOC44MjgxbC00LjU4NTksNC41ODZMMTAsMTJsNy03LDcsN1pcIiwgXCJkYXRhLWljb24tcGF0aFwiOiBcImlubmVyLXBhdGhcIiB9IH1dLCBcIm5hbWVcIjogXCJkaXJlY3Rpb24tLWN1cnZlLS1maWxsZWRcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOCwySDRBMiwyLDAsMCwwLDIsNFYyOGEyLDIsMCwwLDAsMiwySDI4YTIsMiwwLDAsMCwyLTJWNEEyLDIsMCwwLDAsMjgsMlpNMjIuNTg1OSwxMy40MTQxLDE4LDguODI4MXY1Ljc2ODZhNS4wMjA2LDUuMDIwNiwwLDAsMS0xLjA5NTcsMy4xMjRsLTIuMjQ3MSwyLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE0LDIyLjQwMzNWMjdIMTJWMjIuNDAzM2E1LjAyMDYsNS4wMjA2LDAsMCwxLDEuMDk1Ny0zLjEyNGwyLjI0NzEtMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNiwxNC41OTY3VjguODI4MWwtNC41ODU5LDQuNTg2TDEwLDEybDctNyw3LDdaXFxcIj48L3BhdGg+PHBhdGggZmlsbD1cXFwibm9uZVxcXCIgZD1cXFwiTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlxcXCIgZGF0YS1pY29uLXBhdGg9XFxcImlubmVyLXBhdGhcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjRcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkRpcmVjdGlvbkN1cnZlRmlsbGVkMjRcIiwgXCJmaWxlcGF0aFwiOiBcImRpcmVjdGlvbi0tY3VydmUtLWZpbGxlZC8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjgsMkg0QTIsMiwwLDAsMCwyLDRWMjhhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjRBMiwyLDAsMCwwLDI4LDJaTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImZpbGxcIjogXCJub25lXCIsIFwiZFwiOiBcIk0yMi41ODU5LDEzLjQxNDEsMTgsOC44MjgxdjUuNzY4NmE1LjAyMDYsNS4wMjA2LDAsMCwxLTEuMDk1NywzLjEyNGwtMi4yNDcxLDIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTQsMjIuNDAzM1YyN0gxMlYyMi40MDMzYTUuMDIwNiw1LjAyMDYsMCwwLDEsMS4wOTU3LTMuMTI0bDIuMjQ3MS0yLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE2LDE0LjU5NjdWOC44MjgxbC00LjU4NTksNC41ODZMMTAsMTJsNy03LDcsN1pcIiwgXCJkYXRhLWljb24tcGF0aFwiOiBcImlubmVyLXBhdGhcIiB9IH1dLCBcIm5hbWVcIjogXCJkaXJlY3Rpb24tLWN1cnZlLS1maWxsZWRcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOCwySDRBMiwyLDAsMCwwLDIsNFYyOGEyLDIsMCwwLDAsMiwySDI4YTIsMiwwLDAsMCwyLTJWNEEyLDIsMCwwLDAsMjgsMlpNMjIuNTg1OSwxMy40MTQxLDE4LDguODI4MXY1Ljc2ODZhNS4wMjA2LDUuMDIwNiwwLDAsMS0xLjA5NTcsMy4xMjRsLTIuMjQ3MSwyLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE0LDIyLjQwMzNWMjdIMTJWMjIuNDAzM2E1LjAyMDYsNS4wMjA2LDAsMCwxLDEuMDk1Ny0zLjEyNGwyLjI0NzEtMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNiwxNC41OTY3VjguODI4MWwtNC41ODU5LDQuNTg2TDEwLDEybDctNyw3LDdaXFxcIj48L3BhdGg+PHBhdGggZmlsbD1cXFwibm9uZVxcXCIgZD1cXFwiTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlxcXCIgZGF0YS1pY29uLXBhdGg9XFxcImlubmVyLXBhdGhcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjBcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkRpcmVjdGlvbkN1cnZlRmlsbGVkMjBcIiwgXCJmaWxlcGF0aFwiOiBcImRpcmVjdGlvbi0tY3VydmUtLWZpbGxlZC8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjgsMkg0QTIsMiwwLDAsMCwyLDRWMjhhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjRBMiwyLDAsMCwwLDI4LDJaTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImZpbGxcIjogXCJub25lXCIsIFwiZFwiOiBcIk0yMi41ODU5LDEzLjQxNDEsMTgsOC44MjgxdjUuNzY4NmE1LjAyMDYsNS4wMjA2LDAsMCwxLTEuMDk1NywzLjEyNGwtMi4yNDcxLDIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTQsMjIuNDAzM1YyN0gxMlYyMi40MDMzYTUuMDIwNiw1LjAyMDYsMCwwLDEsMS4wOTU3LTMuMTI0bDIuMjQ3MS0yLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE2LDE0LjU5NjdWOC44MjgxbC00LjU4NTksNC41ODZMMTAsMTJsNy03LDcsN1pcIiwgXCJkYXRhLWljb24tcGF0aFwiOiBcImlubmVyLXBhdGhcIiB9IH1dLCBcIm5hbWVcIjogXCJkaXJlY3Rpb24tLWN1cnZlLS1maWxsZWRcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOCwySDRBMiwyLDAsMCwwLDIsNFYyOGEyLDIsMCwwLDAsMiwySDI4YTIsMiwwLDAsMCwyLTJWNEEyLDIsMCwwLDAsMjgsMlpNMjIuNTg1OSwxMy40MTQxLDE4LDguODI4MXY1Ljc2ODZhNS4wMjA2LDUuMDIwNiwwLDAsMS0xLjA5NTcsMy4xMjRsLTIuMjQ3MSwyLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE0LDIyLjQwMzNWMjdIMTJWMjIuNDAzM2E1LjAyMDYsNS4wMjA2LDAsMCwxLDEuMDk1Ny0zLjEyNGwyLjI0NzEtMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNiwxNC41OTY3VjguODI4MWwtNC41ODU5LDQuNTg2TDEwLDEybDctNyw3LDdaXFxcIj48L3BhdGg+PHBhdGggZmlsbD1cXFwibm9uZVxcXCIgZD1cXFwiTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlxcXCIgZGF0YS1pY29uLXBhdGg9XFxcImlubmVyLXBhdGhcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkRpcmVjdGlvbkN1cnZlRmlsbGVkMTZcIiwgXCJmaWxlcGF0aFwiOiBcImRpcmVjdGlvbi0tY3VydmUtLWZpbGxlZC8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjgsMkg0QTIsMiwwLDAsMCwyLDRWMjhhMiwyLDAsMCwwLDIsMkgyOGEyLDIsMCwwLDAsMi0yVjRBMiwyLDAsMCwwLDI4LDJaTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImZpbGxcIjogXCJub25lXCIsIFwiZFwiOiBcIk0yMi41ODU5LDEzLjQxNDEsMTgsOC44MjgxdjUuNzY4NmE1LjAyMDYsNS4wMjA2LDAsMCwxLTEuMDk1NywzLjEyNGwtMi4yNDcxLDIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTQsMjIuNDAzM1YyN0gxMlYyMi40MDMzYTUuMDIwNiw1LjAyMDYsMCwwLDEsMS4wOTU3LTMuMTI0bDIuMjQ3MS0yLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE2LDE0LjU5NjdWOC44MjgxbC00LjU4NTksNC41ODZMMTAsMTJsNy03LDcsN1pcIiwgXCJkYXRhLWljb24tcGF0aFwiOiBcImlubmVyLXBhdGhcIiB9IH1dLCBcIm5hbWVcIjogXCJkaXJlY3Rpb24tLWN1cnZlLS1maWxsZWRcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOCwySDRBMiwyLDAsMCwwLDIsNFYyOGEyLDIsMCwwLDAsMiwySDI4YTIsMiwwLDAsMCwyLTJWNEEyLDIsMCwwLDAsMjgsMlpNMjIuNTg1OSwxMy40MTQxLDE4LDguODI4MXY1Ljc2ODZhNS4wMjA2LDUuMDIwNiwwLDAsMS0xLjA5NTcsMy4xMjRsLTIuMjQ3MSwyLjgwODZBMy4wMSwzLjAxLDAsMCwwLDE0LDIyLjQwMzNWMjdIMTJWMjIuNDAzM2E1LjAyMDYsNS4wMjA2LDAsMCwxLDEuMDk1Ny0zLjEyNGwyLjI0NzEtMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNiwxNC41OTY3VjguODI4MWwtNC41ODU5LDQuNTg2TDEwLDEybDctNyw3LDdaXFxcIj48L3BhdGg+PHBhdGggZmlsbD1cXFwibm9uZVxcXCIgZD1cXFwiTTIyLjU4NTksMTMuNDE0MSwxOCw4LjgyODF2NS43Njg2YTUuMDIwNiw1LjAyMDYsMCwwLDEtMS4wOTU3LDMuMTI0bC0yLjI0NzEsMi44MDg2QTMuMDEsMy4wMSwwLDAsMCwxNCwyMi40MDMzVjI3SDEyVjIyLjQwMzNhNS4wMjA2LDUuMDIwNiwwLDAsMSwxLjA5NTctMy4xMjRsMi4yNDcxLTIuODA4NkEzLjAxLDMuMDEsMCwwLDAsMTYsMTQuNTk2N1Y4LjgyODFsLTQuNTg1OSw0LjU4NkwxMCwxMmw3LTcsNyw3WlxcXCIgZGF0YS1pY29uLXBhdGg9XFxcImlubmVyLXBhdGhcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmVfMSA9IERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlO1xuICAgIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZS5uZ0FmdGVyVmlld0luaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG4gICAgICAgIHZhciBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdO1xuICAgICAgICB2YXIgZG9tUGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICAgICAgICB2YXIgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgICAgIHZhciBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHZhciBub2RlID0gc3ZnRWxlbWVudC5maXJzdENoaWxkO1xuICAgICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAgICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgICAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICAgICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGF0dHJLZXlzID0gT2JqZWN0LmtleXMoYXR0cmlidXRlcyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwidGl0bGVcIikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgICAgICAgdmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgICAgICAgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkaXJlY3Rpb24tY3VydmUtZmlsbGVkLVwiICsgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcImRpcmVjdGlvbi1jdXJ2ZS1maWxsZWQtXCIgKyBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlXzE7XG4gICAgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlID0gRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25EaXJlY3Rpb25DdXJ2ZUZpbGxlZF1cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBEaXJlY3Rpb25DdXJ2ZUZpbGxlZERpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlO1xufSgpKTtcbnZhciBEaXJlY3Rpb25DdXJ2ZUZpbGxlZE1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEaXJlY3Rpb25DdXJ2ZUZpbGxlZE1vZHVsZSgpIHtcbiAgICB9XG4gICAgRGlyZWN0aW9uQ3VydmVGaWxsZWRNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgRGlyZWN0aW9uQ3VydmVGaWxsZWRDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIERpcmVjdGlvbkN1cnZlRmlsbGVkQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIERpcmVjdGlvbkN1cnZlRmlsbGVkRGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIERpcmVjdGlvbkN1cnZlRmlsbGVkTW9kdWxlKTtcbiAgICByZXR1cm4gRGlyZWN0aW9uQ3VydmVGaWxsZWRNb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBEaXJlY3Rpb25DdXJ2ZUZpbGxlZENvbXBvbmVudCwgRGlyZWN0aW9uQ3VydmVGaWxsZWREaXJlY3RpdmUsIERpcmVjdGlvbkN1cnZlRmlsbGVkTW9kdWxlIH07XG4iXX0=