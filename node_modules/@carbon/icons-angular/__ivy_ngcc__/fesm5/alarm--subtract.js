import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var AlarmSubtractComponent = /** @class */ (function () {
    function AlarmSubtractComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AlarmSubtractComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AlarmSubtractComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractComponent.prototype, "size", void 0);
AlarmSubtractComponent.ɵfac = function AlarmSubtractComponent_Factory(t) { return new (t || AlarmSubtractComponent)(); };
AlarmSubtractComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AlarmSubtractComponent, selectors: [["ibm-icon-alarm-subtract"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconAlarmSubtract", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function AlarmSubtractComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [AlarmSubtractDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlarmSubtractComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-alarm-subtract",
                template: "\n    <svg\n      ibmIconAlarmSubtract\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return AlarmSubtractComponent;
}());
var AlarmSubtractDirective = /** @class */ (function () {
    function AlarmSubtractDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "AlarmSubtract32", "filepath": "alarm--subtract/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z" } }, { "elem": "path", "attrs": { "d": "M3.96 5.5H9.030000000000001V7.5H3.96z", "transform": "rotate(-45.06 6.502 6.497)" } }, { "elem": "path", "attrs": { "d": "M24.5 3.96H26.5V9.030000000000001H24.5z", "transform": "rotate(-44.94 25.5 6.498)" } }, { "elem": "path", "attrs": { "d": "M11 16H21V18H11z" } }], "name": "alarm--subtract", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z\"></path><path d=\"M3.96 5.5H9.030000000000001V7.5H3.96z\" transform=\"rotate(-45.06 6.502 6.497)\"></path><path d=\"M24.5 3.96H26.5V9.030000000000001H24.5z\" transform=\"rotate(-44.94 25.5 6.498)\"></path><path d=\"M11 16H21V18H11z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "AlarmSubtract24", "filepath": "alarm--subtract/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z" } }, { "elem": "path", "attrs": { "d": "M3.96 5.5H9.030000000000001V7.5H3.96z", "transform": "rotate(-45.06 6.502 6.497)" } }, { "elem": "path", "attrs": { "d": "M24.5 3.96H26.5V9.030000000000001H24.5z", "transform": "rotate(-44.94 25.5 6.498)" } }, { "elem": "path", "attrs": { "d": "M11 16H21V18H11z" } }], "name": "alarm--subtract", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z\"></path><path d=\"M3.96 5.5H9.030000000000001V7.5H3.96z\" transform=\"rotate(-45.06 6.502 6.497)\"></path><path d=\"M24.5 3.96H26.5V9.030000000000001H24.5z\" transform=\"rotate(-44.94 25.5 6.498)\"></path><path d=\"M11 16H21V18H11z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "AlarmSubtract20", "filepath": "alarm--subtract/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z" } }, { "elem": "path", "attrs": { "d": "M3.96 5.5H9.030000000000001V7.5H3.96z", "transform": "rotate(-45.06 6.502 6.497)" } }, { "elem": "path", "attrs": { "d": "M24.5 3.96H26.5V9.030000000000001H24.5z", "transform": "rotate(-44.94 25.5 6.498)" } }, { "elem": "path", "attrs": { "d": "M11 16H21V18H11z" } }], "name": "alarm--subtract", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z\"></path><path d=\"M3.96 5.5H9.030000000000001V7.5H3.96z\" transform=\"rotate(-45.06 6.502 6.497)\"></path><path d=\"M24.5 3.96H26.5V9.030000000000001H24.5z\" transform=\"rotate(-44.94 25.5 6.498)\"></path><path d=\"M11 16H21V18H11z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "AlarmSubtract16", "filepath": "alarm--subtract/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z" } }, { "elem": "path", "attrs": { "d": "M3.96 5.5H9.030000000000001V7.5H3.96z", "transform": "rotate(-45.06 6.502 6.497)" } }, { "elem": "path", "attrs": { "d": "M24.5 3.96H26.5V9.030000000000001H24.5z", "transform": "rotate(-44.94 25.5 6.498)" } }, { "elem": "path", "attrs": { "d": "M11 16H21V18H11z" } }], "name": "alarm--subtract", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,28A11,11,0,1,1,27,17,11,11,0,0,1,16,28ZM16,8a9,9,0,1,0,9,9A9,9,0,0,0,16,8Z\"></path><path d=\"M3.96 5.5H9.030000000000001V7.5H3.96z\" transform=\"rotate(-45.06 6.502 6.497)\"></path><path d=\"M24.5 3.96H26.5V9.030000000000001H24.5z\" transform=\"rotate(-44.94 25.5 6.498)\"></path><path d=\"M11 16H21V18H11z\"></path></svg>"
            },
        };
    }
    AlarmSubtractDirective_1 = AlarmSubtractDirective;
    AlarmSubtractDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            AlarmSubtractDirective_1.titleIdCounter++;
            title.setAttribute("id", "alarm-subtract-" + AlarmSubtractDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "alarm-subtract-" + AlarmSubtractDirective_1.titleIdCounter);
        }
    };
    var AlarmSubtractDirective_1;
    AlarmSubtractDirective.titleIdCounter = 0;
    AlarmSubtractDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AlarmSubtractDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AlarmSubtractDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AlarmSubtractDirective.prototype, "size", void 0);
    AlarmSubtractDirective = AlarmSubtractDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], AlarmSubtractDirective);
AlarmSubtractDirective.ɵfac = function AlarmSubtractDirective_Factory(t) { return new (t || AlarmSubtractDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AlarmSubtractDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AlarmSubtractDirective, selectors: [["", "ibmIconAlarmSubtract", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlarmSubtractDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconAlarmSubtract]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return AlarmSubtractDirective;
}());
var AlarmSubtractModule = /** @class */ (function () {
    function AlarmSubtractModule() {
    }
AlarmSubtractModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AlarmSubtractModule });
AlarmSubtractModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AlarmSubtractModule_Factory(t) { return new (t || AlarmSubtractModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlarmSubtractModule, { declarations: [AlarmSubtractComponent, AlarmSubtractDirective], exports: [AlarmSubtractComponent, AlarmSubtractDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlarmSubtractModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    AlarmSubtractComponent,
                    AlarmSubtractDirective,
                ],
                exports: [
                    AlarmSubtractComponent,
                    AlarmSubtractDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return AlarmSubtractModule;
}());

export { AlarmSubtractComponent, AlarmSubtractDirective, AlarmSubtractModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,