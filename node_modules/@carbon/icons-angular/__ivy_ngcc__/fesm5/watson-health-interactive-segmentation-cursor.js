import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthInteractiveSegmentationCursorComponent = /** @class */ (function () {
    function WatsonHealthInteractiveSegmentationCursorComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "size", void 0);
WatsonHealthInteractiveSegmentationCursorComponent.ɵfac = function WatsonHealthInteractiveSegmentationCursorComponent_Factory(t) { return new (t || WatsonHealthInteractiveSegmentationCursorComponent)(); };
WatsonHealthInteractiveSegmentationCursorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthInteractiveSegmentationCursorComponent, selectors: [["ibm-icon-watson-health-interactive-segmentation-cursor"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthInteractiveSegmentationCursor", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthInteractiveSegmentationCursorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthInteractiveSegmentationCursorDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthInteractiveSegmentationCursorComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-interactive-segmentation-cursor",
                template: "\n    <svg\n      ibmIconWatsonHealthInteractiveSegmentationCursor\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthInteractiveSegmentationCursorComponent;
}());
var WatsonHealthInteractiveSegmentationCursorDirective = /** @class */ (function () {
    function WatsonHealthInteractiveSegmentationCursorDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor32", "filepath": "watson-health/interactive-segmentation-cursor/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor24", "filepath": "watson-health/interactive-segmentation-cursor/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor20", "filepath": "watson-health/interactive-segmentation-cursor/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor16", "filepath": "watson-health/interactive-segmentation-cursor/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
        };
    }
    WatsonHealthInteractiveSegmentationCursorDirective_1 = WatsonHealthInteractiveSegmentationCursorDirective;
    WatsonHealthInteractiveSegmentationCursorDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthInteractiveSegmentationCursorDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-interactive-segmentation-cursor-" + WatsonHealthInteractiveSegmentationCursorDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-interactive-segmentation-cursor-" + WatsonHealthInteractiveSegmentationCursorDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthInteractiveSegmentationCursorDirective_1;
    WatsonHealthInteractiveSegmentationCursorDirective.titleIdCounter = 0;
    WatsonHealthInteractiveSegmentationCursorDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "size", void 0);
    WatsonHealthInteractiveSegmentationCursorDirective = WatsonHealthInteractiveSegmentationCursorDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthInteractiveSegmentationCursorDirective);
WatsonHealthInteractiveSegmentationCursorDirective.ɵfac = function WatsonHealthInteractiveSegmentationCursorDirective_Factory(t) { return new (t || WatsonHealthInteractiveSegmentationCursorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthInteractiveSegmentationCursorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthInteractiveSegmentationCursorDirective, selectors: [["", "ibmIconWatsonHealthInteractiveSegmentationCursor", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthInteractiveSegmentationCursorDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthInteractiveSegmentationCursor]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthInteractiveSegmentationCursorDirective;
}());
var WatsonHealthInteractiveSegmentationCursorModule = /** @class */ (function () {
    function WatsonHealthInteractiveSegmentationCursorModule() {
    }
WatsonHealthInteractiveSegmentationCursorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthInteractiveSegmentationCursorModule });
WatsonHealthInteractiveSegmentationCursorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WatsonHealthInteractiveSegmentationCursorModule_Factory(t) { return new (t || WatsonHealthInteractiveSegmentationCursorModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthInteractiveSegmentationCursorModule, { declarations: [WatsonHealthInteractiveSegmentationCursorComponent, WatsonHealthInteractiveSegmentationCursorDirective], exports: [WatsonHealthInteractiveSegmentationCursorComponent, WatsonHealthInteractiveSegmentationCursorDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthInteractiveSegmentationCursorModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthInteractiveSegmentationCursorComponent,
                    WatsonHealthInteractiveSegmentationCursorDirective,
                ],
                exports: [
                    WatsonHealthInteractiveSegmentationCursorComponent,
                    WatsonHealthInteractiveSegmentationCursorDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return WatsonHealthInteractiveSegmentationCursorModule;
}());

export { WatsonHealthInteractiveSegmentationCursorComponent, WatsonHealthInteractiveSegmentationCursorDirective, WatsonHealthInteractiveSegmentationCursorModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,