import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthWindowPresetComponent = /** @class */ (function () {
    function WatsonHealthWindowPresetComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "size", void 0);
WatsonHealthWindowPresetComponent.ɵfac = function WatsonHealthWindowPresetComponent_Factory(t) { return new (t || WatsonHealthWindowPresetComponent)(); };
WatsonHealthWindowPresetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthWindowPresetComponent, selectors: [["ibm-icon-watson-health-window-preset"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthWindowPreset", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthWindowPresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthWindowPresetDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowPresetComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-window-preset",
                template: "\n    <svg\n      ibmIconWatsonHealthWindowPreset\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthWindowPresetComponent;
}());
var WatsonHealthWindowPresetDirective = /** @class */ (function () {
    function WatsonHealthWindowPresetDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthWindowPreset32", "filepath": "watson-health/window--preset/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthWindowPreset24", "filepath": "watson-health/window--preset/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthWindowPreset20", "filepath": "watson-health/window--preset/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthWindowPreset16", "filepath": "watson-health/window--preset/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
        };
    }
    WatsonHealthWindowPresetDirective_1 = WatsonHealthWindowPresetDirective;
    WatsonHealthWindowPresetDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthWindowPresetDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-window-preset-" + WatsonHealthWindowPresetDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-window-preset-" + WatsonHealthWindowPresetDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthWindowPresetDirective_1;
    WatsonHealthWindowPresetDirective.titleIdCounter = 0;
    WatsonHealthWindowPresetDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "size", void 0);
    WatsonHealthWindowPresetDirective = WatsonHealthWindowPresetDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthWindowPresetDirective);
WatsonHealthWindowPresetDirective.ɵfac = function WatsonHealthWindowPresetDirective_Factory(t) { return new (t || WatsonHealthWindowPresetDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthWindowPresetDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthWindowPresetDirective, selectors: [["", "ibmIconWatsonHealthWindowPreset", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowPresetDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthWindowPreset]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthWindowPresetDirective;
}());
var WatsonHealthWindowPresetModule = /** @class */ (function () {
    function WatsonHealthWindowPresetModule() {
    }
WatsonHealthWindowPresetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthWindowPresetModule });
WatsonHealthWindowPresetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WatsonHealthWindowPresetModule_Factory(t) { return new (t || WatsonHealthWindowPresetModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthWindowPresetModule, { declarations: [WatsonHealthWindowPresetComponent, WatsonHealthWindowPresetDirective], exports: [WatsonHealthWindowPresetComponent, WatsonHealthWindowPresetDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowPresetModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthWindowPresetComponent,
                    WatsonHealthWindowPresetDirective,
                ],
                exports: [
                    WatsonHealthWindowPresetComponent,
                    WatsonHealthWindowPresetDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return WatsonHealthWindowPresetModule;
}());

export { WatsonHealthWindowPresetComponent, WatsonHealthWindowPresetDirective, WatsonHealthWindowPresetModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0c29uLWhlYWx0aC13aW5kb3ctLXByZXNldC5qcyIsInNvdXJjZXMiOlsid2F0c29uLWhlYWx0aC13aW5kb3ctLXByZXNldC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEZBSU87QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBWXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSwgX19tZXRhZGF0YSB9IGZyb20gJ3RzbGliJztcbmltcG9ydCB7IElucHV0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIERpcmVjdGl2ZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldEF0dHJpYnV0ZXMgfSBmcm9tICdAY2FyYm9uL2ljb24taGVscGVycyc7XG5cbnZhciBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gV2F0c29uSGVhbHRoV2luZG93UHJlc2V0Q29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQucHJvdG90eXBlLCBcImZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldENvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldENvbXBvbmVudC5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaWJtLWljb24td2F0c29uLWhlYWx0aC13aW5kb3ctcHJlc2V0XCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25XYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRcXG4gICAgICBbc2l6ZV09XFxcInNpemVcXFwiXFxuICAgICAgW2FyaWFMYWJlbF09XFxcImFyaWFMYWJlbFxcXCJcXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVxcXCJhcmlhTGFiZWxsZWRieVxcXCJcXG4gICAgICBbYXJpYUhpZGRlbl09XFxcImFyaWFIaWRkZW5cXFwiXFxuICAgICAgW3RpdGxlXT1cXFwidGl0bGVcXFwiXFxuICAgICAgW2lzRm9jdXNhYmxlXT1cXFwiZm9jdXNhYmxlXFxcIlxcbiAgICAgIFthdHRyLmNsYXNzXT1cXFwiaW5uZXJDbGFzc1xcXCI+XFxuICAgIDwvc3ZnPlxcbiAgXCJcbiAgICAgICAgfSlcbiAgICBdLCBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQpO1xuICAgIHJldHVybiBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQ7XG59KCkpO1xudmFyIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmUoZWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICAgICAgICB0aGlzLmlzRm9jdXNhYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaWNvbnMgPSB7XG4gICAgICAgICAgICBcIjMyXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXQzMlwiLCBcImZpbGVwYXRoXCI6IFwid2F0c29uLWhlYWx0aC93aW5kb3ctLXByZXNldC8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTUgNkgxN1Y4SDE1ek0yNCAxNUgyNlYxN0gyNHpNMTUgMjRIMTdWMjZIMTV6TTYgMTVIOFYxN0g2elwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNOC41ODYgOC41ODZIMTAuNTg2VjEwLjU4Nkg4LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDkuNTg2IDkuNTg2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNDE0IDguNTg2SDIzLjQxNFYxMC41ODZIMjEuNDE0elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjIuNDE0IDkuNTg2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNDE0IDIxLjQxNEgyMy40MTRWMjMuNDE0SDIxLjQxNHpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDIyLjQxNCAyMi40MTQpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk04LjU4NiAyMS40MTRIMTAuNTg2VjIzLjQxNEg4LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDkuNTg2IDIyLjQxNClcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE2LDIyYTYsNiwwLDEsMC02LTZBNiw2LDAsMCwwLDE2LDIyWm0wLTEwdjhhNCw0LDAsMCwxLDAtOFpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI4LDMwSDRhMi4wMDIxLDIuMDAyMSwwLDAsMS0yLTJWNEEyLjAwMjEsMi4wMDIxLDAsMCwxLDQsMkgyOGEyLjAwMjEsMi4wMDIxLDAsMCwxLDIsMlYyOEEyLjAwMjEsMi4wMDIxLDAsMCwxLDI4LDMwWk00LDRWMjhIMjhWNFpcIiB9IH1dLCBcIm5hbWVcIjogXCJ3aW5kb3ctLXByZXNldFwiLCBcInNpemVcIjogMzIgfSwgXCJzaXplXCI6IDMyIH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIzMlxcXCIgaGVpZ2h0PVxcXCIzMlxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTE1IDZIMTdWOEgxNXpNMjQgMTVIMjZWMTdIMjR6TTE1IDI0SDE3VjI2SDE1ek02IDE1SDhWMTdINnpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNOC41ODYgOC41ODZIMTAuNTg2VjEwLjU4Nkg4LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5LjU4NiA5LjU4NilcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjEuNDE0IDguNTg2SDIzLjQxNFYxMC41ODZIMjEuNDE0elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDIyLjQxNCA5LjU4NilcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjEuNDE0IDIxLjQxNEgyMy40MTRWMjMuNDE0SDIxLjQxNHpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyMi40MTQgMjIuNDE0KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk04LjU4NiAyMS40MTRIMTAuNTg2VjIzLjQxNEg4LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5LjU4NiAyMi40MTQpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTE2LDIyYTYsNiwwLDEsMC02LTZBNiw2LDAsMCwwLDE2LDIyWm0wLTEwdjhhNCw0LDAsMCwxLDAtOFpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjgsMzBINGEyLjAwMjEsMi4wMDIxLDAsMCwxLTItMlY0QTIuMDAyMSwyLjAwMjEsMCwwLDEsNCwySDI4YTIuMDAyMSwyLjAwMjEsMCwwLDEsMiwyVjI4QTIuMDAyMSwyLjAwMjEsMCwwLDEsMjgsMzBaTTQsNFYyOEgyOFY0WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyNFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiV2F0c29uSGVhbHRoV2luZG93UHJlc2V0MjRcIiwgXCJmaWxlcGF0aFwiOiBcIndhdHNvbi1oZWFsdGgvd2luZG93LS1wcmVzZXQvMjQuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDI0LCBcImhlaWdodFwiOiAyNCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE1IDZIMTdWOEgxNXpNMjQgMTVIMjZWMTdIMjR6TTE1IDI0SDE3VjI2SDE1ek02IDE1SDhWMTdINnpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTguNTg2IDguNTg2SDEwLjU4NlYxMC41ODZIOC41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA5LjU4NiA5LjU4NilcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIxLjQxNCA4LjU4NkgyMy40MTRWMTAuNTg2SDIxLjQxNHpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDIyLjQxNCA5LjU4NilcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIxLjQxNCAyMS40MTRIMjMuNDE0VjIzLjQxNEgyMS40MTR6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyMi40MTQgMjIuNDE0KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNOC41ODYgMjEuNDE0SDEwLjU4NlYyMy40MTRIOC41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA5LjU4NiAyMi40MTQpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xNiwyMmE2LDYsMCwxLDAtNi02QTYsNiwwLDAsMCwxNiwyMlptMC0xMHY4YTQsNCwwLDAsMSwwLThaXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yOCwzMEg0YTIuMDAyMSwyLjAwMjEsMCwwLDEtMi0yVjRBMi4wMDIxLDIuMDAyMSwwLDAsMSw0LDJIMjhhMi4wMDIxLDIuMDAyMSwwLDAsMSwyLDJWMjhBMi4wMDIxLDIuMDAyMSwwLDAsMSwyOCwzMFpNNCw0VjI4SDI4VjRaXCIgfSB9XSwgXCJuYW1lXCI6IFwid2luZG93LS1wcmVzZXRcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xNSA2SDE3VjhIMTV6TTI0IDE1SDI2VjE3SDI0ek0xNSAyNEgxN1YyNkgxNXpNNiAxNUg4VjE3SDZ6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTguNTg2IDguNTg2SDEwLjU4NlYxMC41ODZIOC41ODZ6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgOS41ODYgOS41ODYpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTIxLjQxNCA4LjU4NkgyMy40MTRWMTAuNTg2SDIxLjQxNHpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyMi40MTQgOS41ODYpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTIxLjQxNCAyMS40MTRIMjMuNDE0VjIzLjQxNEgyMS40MTR6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjIuNDE0IDIyLjQxNClcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNOC41ODYgMjEuNDE0SDEwLjU4NlYyMy40MTRIOC41ODZ6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgOS41ODYgMjIuNDE0KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xNiwyMmE2LDYsMCwxLDAtNi02QTYsNiwwLDAsMCwxNiwyMlptMC0xMHY4YTQsNCwwLDAsMSwwLThaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTI4LDMwSDRhMi4wMDIxLDIuMDAyMSwwLDAsMS0yLTJWNEEyLjAwMjEsMi4wMDIxLDAsMCwxLDQsMkgyOGEyLjAwMjEsMi4wMDIxLDAsMCwxLDIsMlYyOEEyLjAwMjEsMi4wMDIxLDAsMCwxLDI4LDMwWk00LDRWMjhIMjhWNFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjBcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIldhdHNvbkhlYWx0aFdpbmRvd1ByZXNldDIwXCIsIFwiZmlsZXBhdGhcIjogXCJ3YXRzb24taGVhbHRoL3dpbmRvdy0tcHJlc2V0LzIwLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyMCwgXCJoZWlnaHRcIjogMjAgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xNSA2SDE3VjhIMTV6TTI0IDE1SDI2VjE3SDI0ek0xNSAyNEgxN1YyNkgxNXpNNiAxNUg4VjE3SDZ6XCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk04LjU4NiA4LjU4NkgxMC41ODZWMTAuNTg2SDguNTg2elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgOS41ODYgOS41ODYpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMS40MTQgOC41ODZIMjMuNDE0VjEwLjU4NkgyMS40MTR6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyMi40MTQgOS41ODYpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMS40MTQgMjEuNDE0SDIzLjQxNFYyMy40MTRIMjEuNDE0elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjIuNDE0IDIyLjQxNClcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTguNTg2IDIxLjQxNEgxMC41ODZWMjMuNDE0SDguNTg2elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgOS41ODYgMjIuNDE0KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTYsMjJhNiw2LDAsMSwwLTYtNkE2LDYsMCwwLDAsMTYsMjJabTAtMTB2OGE0LDQsMCwwLDEsMC04WlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjgsMzBINGEyLjAwMjEsMi4wMDIxLDAsMCwxLTItMlY0QTIuMDAyMSwyLjAwMjEsMCwwLDEsNCwySDI4YTIuMDAyMSwyLjAwMjEsMCwwLDEsMiwyVjI4QTIuMDAyMSwyLjAwMjEsMCwwLDEsMjgsMzBaTTQsNFYyOEgyOFY0WlwiIH0gfV0sIFwibmFtZVwiOiBcIndpbmRvdy0tcHJlc2V0XCIsIFwic2l6ZVwiOiAyMCB9LCBcInNpemVcIjogMjAgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTUgNkgxN1Y4SDE1ek0yNCAxNUgyNlYxN0gyNHpNMTUgMjRIMTdWMjZIMTV6TTYgMTVIOFYxN0g2elxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk04LjU4NiA4LjU4NkgxMC41ODZWMTAuNTg2SDguNTg2elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDkuNTg2IDkuNTg2KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yMS40MTQgOC41ODZIMjMuNDE0VjEwLjU4NkgyMS40MTR6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjIuNDE0IDkuNTg2KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yMS40MTQgMjEuNDE0SDIzLjQxNFYyMy40MTRIMjEuNDE0elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDIyLjQxNCAyMi40MTQpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTguNTg2IDIxLjQxNEgxMC41ODZWMjMuNDE0SDguNTg2elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDkuNTg2IDIyLjQxNClcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTYsMjJhNiw2LDAsMSwwLTYtNkE2LDYsMCwwLDAsMTYsMjJabTAtMTB2OGE0LDQsMCwwLDEsMC04WlxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yOCwzMEg0YTIuMDAyMSwyLjAwMjEsMCwwLDEtMi0yVjRBMi4wMDIxLDIuMDAyMSwwLDAsMSw0LDJIMjhhMi4wMDIxLDIuMDAyMSwwLDAsMSwyLDJWMjhBMi4wMDIxLDIuMDAyMSwwLDAsMSwyOCwzMFpNNCw0VjI4SDI4VjRaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjE2XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXQxNlwiLCBcImZpbGVwYXRoXCI6IFwid2F0c29uLWhlYWx0aC93aW5kb3ctLXByZXNldC8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTUgNkgxN1Y4SDE1ek0yNCAxNUgyNlYxN0gyNHpNMTUgMjRIMTdWMjZIMTV6TTYgMTVIOFYxN0g2elwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNOC41ODYgOC41ODZIMTAuNTg2VjEwLjU4Nkg4LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDkuNTg2IDkuNTg2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNDE0IDguNTg2SDIzLjQxNFYxMC41ODZIMjEuNDE0elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjIuNDE0IDkuNTg2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNDE0IDIxLjQxNEgyMy40MTRWMjMuNDE0SDIxLjQxNHpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDIyLjQxNCAyMi40MTQpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk04LjU4NiAyMS40MTRIMTAuNTg2VjIzLjQxNEg4LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDkuNTg2IDIyLjQxNClcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE2LDIyYTYsNiwwLDEsMC02LTZBNiw2LDAsMCwwLDE2LDIyWm0wLTEwdjhhNCw0LDAsMCwxLDAtOFpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI4LDMwSDRhMi4wMDIxLDIuMDAyMSwwLDAsMS0yLTJWNEEyLjAwMjEsMi4wMDIxLDAsMCwxLDQsMkgyOGEyLjAwMjEsMi4wMDIxLDAsMCwxLDIsMlYyOEEyLjAwMjEsMi4wMDIxLDAsMCwxLDI4LDMwWk00LDRWMjhIMjhWNFpcIiB9IH1dLCBcIm5hbWVcIjogXCJ3aW5kb3ctLXByZXNldFwiLCBcInNpemVcIjogMTYgfSwgXCJzaXplXCI6IDE2IH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIxNlxcXCIgaGVpZ2h0PVxcXCIxNlxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTE1IDZIMTdWOEgxNXpNMjQgMTVIMjZWMTdIMjR6TTE1IDI0SDE3VjI2SDE1ek02IDE1SDhWMTdINnpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNOC41ODYgOC41ODZIMTAuNTg2VjEwLjU4Nkg4LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5LjU4NiA5LjU4NilcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjEuNDE0IDguNTg2SDIzLjQxNFYxMC41ODZIMjEuNDE0elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDIyLjQxNCA5LjU4NilcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjEuNDE0IDIxLjQxNEgyMy40MTRWMjMuNDE0SDIxLjQxNHpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyMi40MTQgMjIuNDE0KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk04LjU4NiAyMS40MTRIMTAuNTg2VjIzLjQxNEg4LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5LjU4NiAyMi40MTQpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTE2LDIyYTYsNiwwLDEsMC02LTZBNiw2LDAsMCwwLDE2LDIyWm0wLTEwdjhhNCw0LDAsMCwxLDAtOFpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjgsMzBINGEyLjAwMjEsMi4wMDIxLDAsMCwxLTItMlY0QTIuMDAyMSwyLjAwMjEsMCwwLDEsNCwySDI4YTIuMDAyMSwyLjAwMjEsMCwwLDEsMiwyVjI4QTIuMDAyMSwyLjAwMjEsMCwwLDEsMjgsMzBaTTQsNFYyOEgyOFY0WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmVfMSA9IFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZTtcbiAgICBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmUucHJvdG90eXBlLm5nQWZ0ZXJWaWV3SW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHN2ZyA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcbiAgICAgICAgdmFyIGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV07XG4gICAgICAgIHZhciBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgICAgIHZhciByYXdTVkcgPSBpY29uLnN2ZztcbiAgICAgICAgdmFyIHN2Z0VsZW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHJhd1NWRywgXCJpbWFnZS9zdmcreG1sXCIpLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgdmFyIG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAgICAgICAvLyBpbXBvcnROb2RlIG1ha2VzIGEgY2xvbmUgb2YgdGhlIG5vZGVcbiAgICAgICAgICAgIC8vIHRoaXMgZW5zdXJlcyB3ZSBrZWVwIGxvb3Bpbmcgb3ZlciB0aGUgbm9kZXMgaW4gdGhlIHBhcnNlZCBkb2N1bWVudFxuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHN2Zy5vd25lckRvY3VtZW50LmltcG9ydE5vZGUobm9kZSwgdHJ1ZSkpO1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICAgICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgICAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdHRyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzLnRpdGxlKSB7XG4gICAgICAgICAgICB2YXIgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICAgICAgICBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ3YXRzb24taGVhbHRoLXdpbmRvdy1wcmVzZXQtXCIgKyBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcIndhdHNvbi1oZWFsdGgtd2luZG93LXByZXNldC1cIiArIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZV8xO1xuICAgIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZS50aXRsZUlkQ291bnRlciA9IDA7XG4gICAgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0RGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZS5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpc0ZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZSA9IFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldERpcmVjdGl2ZV8xID0gX19kZWNvcmF0ZShbXG4gICAgICAgIERpcmVjdGl2ZSh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJbaWJtSWNvbldhdHNvbkhlYWx0aFdpbmRvd1ByZXNldF1cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmUpO1xuICAgIHJldHVybiBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXREaXJlY3RpdmU7XG59KCkpO1xudmFyIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldE1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRNb2R1bGUoKSB7XG4gICAgfVxuICAgIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldE1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0RGlyZWN0aXZlLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgICAgICBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0RGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldE1vZHVsZSk7XG4gICAgcmV0dXJuIFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldE1vZHVsZTtcbn0oKSk7XG5cbmV4cG9ydCB7IFdhdHNvbkhlYWx0aFdpbmRvd1ByZXNldENvbXBvbmVudCwgV2F0c29uSGVhbHRoV2luZG93UHJlc2V0RGlyZWN0aXZlLCBXYXRzb25IZWFsdGhXaW5kb3dQcmVzZXRNb2R1bGUgfTtcbiJdfQ==