import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthLaunchStudy_2Component = /** @class */ (function () {
    function WatsonHealthLaunchStudy_2Component() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Component.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Component.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthLaunchStudy_2Component.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Component.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthLaunchStudy_2Component.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Component.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Component.prototype, "size", void 0);
WatsonHealthLaunchStudy_2Component.ɵfac = function WatsonHealthLaunchStudy_2Component_Factory(t) { return new (t || WatsonHealthLaunchStudy_2Component)(); };
WatsonHealthLaunchStudy_2Component.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthLaunchStudy_2Component, selectors: [["ibm-icon-watson-health-launch-study-2"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthLaunchStudy_2", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthLaunchStudy_2Component_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthLaunchStudy_2Directive]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthLaunchStudy_2Component, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-launch-study-2",
                template: "\n    <svg\n      ibmIconWatsonHealthLaunchStudy_2\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthLaunchStudy_2Component;
}());
var WatsonHealthLaunchStudy_2Directive = /** @class */ (function () {
    function WatsonHealthLaunchStudy_2Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthLaunchStudy_232", "filepath": "watson-health/launch-study--2/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "23", "cy": "7", "r": "1" } }, { "elem": "path", "attrs": { "d": "M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z" } }, { "elem": "path", "attrs": { "d": "M8 6H20V8H8z" } }], "name": "launch-study--2", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"23\" cy=\"7\" r=\"1\"></circle><path d=\"M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z\"></path><path d=\"M8 6H20V8H8z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthLaunchStudy_224", "filepath": "watson-health/launch-study--2/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "23", "cy": "7", "r": "1" } }, { "elem": "path", "attrs": { "d": "M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z" } }, { "elem": "path", "attrs": { "d": "M8 6H20V8H8z" } }], "name": "launch-study--2", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"23\" cy=\"7\" r=\"1\"></circle><path d=\"M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z\"></path><path d=\"M8 6H20V8H8z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthLaunchStudy_220", "filepath": "watson-health/launch-study--2/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "23", "cy": "7", "r": "1" } }, { "elem": "path", "attrs": { "d": "M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z" } }, { "elem": "path", "attrs": { "d": "M8 6H20V8H8z" } }], "name": "launch-study--2", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"23\" cy=\"7\" r=\"1\"></circle><path d=\"M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z\"></path><path d=\"M8 6H20V8H8z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthLaunchStudy_216", "filepath": "watson-health/launch-study--2/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "23", "cy": "7", "r": "1" } }, { "elem": "path", "attrs": { "d": "M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z" } }, { "elem": "path", "attrs": { "d": "M8 6H20V8H8z" } }], "name": "launch-study--2", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"23\" cy=\"7\" r=\"1\"></circle><path d=\"M26 4v6H6V4H26m0-2H6A2 2 0 004 4v6a2 2 0 002 2H26a2 2 0 002-2V4a2 2 0 00-2-2zM20.59 21.41L17 17.83 17 30 15 30 15 17.83 11.41 21.41 10 20 16 14 22 20 20.59 21.41z\"></path><path d=\"M8 6H20V8H8z\"></path></svg>"
            },
        };
    }
    WatsonHealthLaunchStudy_2Directive_1 = WatsonHealthLaunchStudy_2Directive;
    WatsonHealthLaunchStudy_2Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthLaunchStudy_2Directive_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-launch-study-2-" + WatsonHealthLaunchStudy_2Directive_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-launch-study-2-" + WatsonHealthLaunchStudy_2Directive_1.titleIdCounter);
        }
    };
    var WatsonHealthLaunchStudy_2Directive_1;
    WatsonHealthLaunchStudy_2Directive.titleIdCounter = 0;
    WatsonHealthLaunchStudy_2Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Directive.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Directive.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthLaunchStudy_2Directive.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Directive.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthLaunchStudy_2Directive.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthLaunchStudy_2Directive.prototype, "size", void 0);
    WatsonHealthLaunchStudy_2Directive = WatsonHealthLaunchStudy_2Directive_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthLaunchStudy_2Directive);
WatsonHealthLaunchStudy_2Directive.ɵfac = function WatsonHealthLaunchStudy_2Directive_Factory(t) { return new (t || WatsonHealthLaunchStudy_2Directive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthLaunchStudy_2Directive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthLaunchStudy_2Directive, selectors: [["", "ibmIconWatsonHealthLaunchStudy_2", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthLaunchStudy_2Directive, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthLaunchStudy_2]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthLaunchStudy_2Directive;
}());
var WatsonHealthLaunchStudy_2Module = /** @class */ (function () {
    function WatsonHealthLaunchStudy_2Module() {
    }
WatsonHealthLaunchStudy_2Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthLaunchStudy_2Module });
WatsonHealthLaunchStudy_2Module.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WatsonHealthLaunchStudy_2Module_Factory(t) { return new (t || WatsonHealthLaunchStudy_2Module)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthLaunchStudy_2Module, { declarations: [WatsonHealthLaunchStudy_2Component, WatsonHealthLaunchStudy_2Directive], exports: [WatsonHealthLaunchStudy_2Component, WatsonHealthLaunchStudy_2Directive] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthLaunchStudy_2Module, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthLaunchStudy_2Component,
                    WatsonHealthLaunchStudy_2Directive,
                ],
                exports: [
                    WatsonHealthLaunchStudy_2Component,
                    WatsonHealthLaunchStudy_2Directive,
                ]
            }]
    }], function () { return []; }, null); })();
    return WatsonHealthLaunchStudy_2Module;
}());

export { WatsonHealthLaunchStudy_2Component, WatsonHealthLaunchStudy_2Directive, WatsonHealthLaunchStudy_2Module };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,