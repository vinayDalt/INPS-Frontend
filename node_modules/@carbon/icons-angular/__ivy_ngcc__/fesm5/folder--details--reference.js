import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var FolderDetailsReferenceComponent = /** @class */ (function () {
    function FolderDetailsReferenceComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FolderDetailsReferenceComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FolderDetailsReferenceComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceComponent.prototype, "size", void 0);
FolderDetailsReferenceComponent.ɵfac = function FolderDetailsReferenceComponent_Factory(t) { return new (t || FolderDetailsReferenceComponent)(); };
FolderDetailsReferenceComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FolderDetailsReferenceComponent, selectors: [["ibm-icon-folder-details-reference"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconFolderDetailsReference", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function FolderDetailsReferenceComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [FolderDetailsReferenceDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FolderDetailsReferenceComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-folder-details-reference",
                template: "\n    <svg\n      ibmIconFolderDetailsReference\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return FolderDetailsReferenceComponent;
}());
var FolderDetailsReferenceDirective = /** @class */ (function () {
    function FolderDetailsReferenceDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "FolderDetailsReference32", "filepath": "folder--details--reference/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z" } }], "name": "folder--details--reference", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "FolderDetailsReference24", "filepath": "folder--details--reference/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z" } }], "name": "folder--details--reference", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "FolderDetailsReference20", "filepath": "folder--details--reference/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z" } }], "name": "folder--details--reference", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "FolderDetailsReference16", "filepath": "folder--details--reference/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z" } }], "name": "folder--details--reference", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H23V30H16zM16 24H30V26H16zM16 20H30V22H16zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM28 8H16L12.5859 4.5859A2.0007 2.0007 0 0011.1716 4H4A2 2 0 002 6V18H4V6h7.1716l3.4141 3.4141L15.1716 10H28v8h2V10A2 2 0 0028 8z\"></path></svg>"
            },
        };
    }
    FolderDetailsReferenceDirective_1 = FolderDetailsReferenceDirective;
    FolderDetailsReferenceDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            FolderDetailsReferenceDirective_1.titleIdCounter++;
            title.setAttribute("id", "folder-details-reference-" + FolderDetailsReferenceDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "folder-details-reference-" + FolderDetailsReferenceDirective_1.titleIdCounter);
        }
    };
    var FolderDetailsReferenceDirective_1;
    FolderDetailsReferenceDirective.titleIdCounter = 0;
    FolderDetailsReferenceDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FolderDetailsReferenceDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FolderDetailsReferenceDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FolderDetailsReferenceDirective.prototype, "size", void 0);
    FolderDetailsReferenceDirective = FolderDetailsReferenceDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], FolderDetailsReferenceDirective);
FolderDetailsReferenceDirective.ɵfac = function FolderDetailsReferenceDirective_Factory(t) { return new (t || FolderDetailsReferenceDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FolderDetailsReferenceDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FolderDetailsReferenceDirective, selectors: [["", "ibmIconFolderDetailsReference", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FolderDetailsReferenceDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconFolderDetailsReference]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return FolderDetailsReferenceDirective;
}());
var FolderDetailsReferenceModule = /** @class */ (function () {
    function FolderDetailsReferenceModule() {
    }
FolderDetailsReferenceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FolderDetailsReferenceModule });
FolderDetailsReferenceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FolderDetailsReferenceModule_Factory(t) { return new (t || FolderDetailsReferenceModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FolderDetailsReferenceModule, { declarations: [FolderDetailsReferenceComponent, FolderDetailsReferenceDirective], exports: [FolderDetailsReferenceComponent, FolderDetailsReferenceDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FolderDetailsReferenceModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    FolderDetailsReferenceComponent,
                    FolderDetailsReferenceDirective,
                ],
                exports: [
                    FolderDetailsReferenceComponent,
                    FolderDetailsReferenceDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return FolderDetailsReferenceModule;
}());

export { FolderDetailsReferenceComponent, FolderDetailsReferenceDirective, FolderDetailsReferenceModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,