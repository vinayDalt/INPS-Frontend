import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var VmdkDiskComponent = /** @class */ (function () {
    function VmdkDiskComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], VmdkDiskComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], VmdkDiskComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskComponent.prototype, "size", void 0);
VmdkDiskComponent.ɵfac = function VmdkDiskComponent_Factory(t) { return new (t || VmdkDiskComponent)(); };
VmdkDiskComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VmdkDiskComponent, selectors: [["ibm-icon-vmdk-disk"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconVmdkDisk", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function VmdkDiskComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [VmdkDiskDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VmdkDiskComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-vmdk-disk",
                template: "\n    <svg\n      ibmIconVmdkDisk\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return VmdkDiskComponent;
}());
var VmdkDiskDirective = /** @class */ (function () {
    function VmdkDiskDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "VmdkDisk32", "filepath": "vmdk-disk/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "10.5", "cy": "24.5", "r": "1.5" } }, { "elem": "path", "attrs": { "d": "M19.5 14.964H21.5V20.035H19.5z", "transform": "rotate(-45 20.5 17.5)" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "13", "r": "2" } }, { "elem": "path", "attrs": { "d": "M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z" } }, { "elem": "path", "attrs": { "d": "M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z" } }], "name": "vmdk-disk", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"10.5\" cy=\"24.5\" r=\"1.5\"></circle><path d=\"M19.5 14.964H21.5V20.035H19.5z\" transform=\"rotate(-45 20.5 17.5)\"></path><circle cx=\"16\" cy=\"13\" r=\"2\"></circle><path d=\"M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z\"></path><path d=\"M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "VmdkDisk24", "filepath": "vmdk-disk/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "10.5", "cy": "24.5", "r": "1.5" } }, { "elem": "path", "attrs": { "d": "M19.5 14.964H21.5V20.035H19.5z", "transform": "rotate(-45 20.5 17.5)" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "13", "r": "2" } }, { "elem": "path", "attrs": { "d": "M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z" } }, { "elem": "path", "attrs": { "d": "M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z" } }], "name": "vmdk-disk", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"10.5\" cy=\"24.5\" r=\"1.5\"></circle><path d=\"M19.5 14.964H21.5V20.035H19.5z\" transform=\"rotate(-45 20.5 17.5)\"></path><circle cx=\"16\" cy=\"13\" r=\"2\"></circle><path d=\"M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z\"></path><path d=\"M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "VmdkDisk20", "filepath": "vmdk-disk/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "10.5", "cy": "24.5", "r": "1.5" } }, { "elem": "path", "attrs": { "d": "M19.5 14.964H21.5V20.035H19.5z", "transform": "rotate(-45 20.5 17.5)" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "13", "r": "2" } }, { "elem": "path", "attrs": { "d": "M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z" } }, { "elem": "path", "attrs": { "d": "M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z" } }], "name": "vmdk-disk", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"10.5\" cy=\"24.5\" r=\"1.5\"></circle><path d=\"M19.5 14.964H21.5V20.035H19.5z\" transform=\"rotate(-45 20.5 17.5)\"></path><circle cx=\"16\" cy=\"13\" r=\"2\"></circle><path d=\"M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z\"></path><path d=\"M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "VmdkDisk16", "filepath": "vmdk-disk/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "10.5", "cy": "24.5", "r": "1.5" } }, { "elem": "path", "attrs": { "d": "M19.5 14.964H21.5V20.035H19.5z", "transform": "rotate(-45 20.5 17.5)" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "13", "r": "2" } }, { "elem": "path", "attrs": { "d": "M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z" } }, { "elem": "path", "attrs": { "d": "M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z" } }], "name": "vmdk-disk", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"10.5\" cy=\"24.5\" r=\"1.5\"></circle><path d=\"M19.5 14.964H21.5V20.035H19.5z\" transform=\"rotate(-45 20.5 17.5)\"></path><circle cx=\"16\" cy=\"13\" r=\"2\"></circle><path d=\"M16,6a7,7,0,0,0,0,14V18a5,5,0,1,1,5-5h2A7,7,0,0,0,16,6Z\"></path><path d=\"M26,2H6A2,2,0,0,0,4,4V28a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V4A2,2,0,0,0,26,2Zm0,26H6V4H26Z\"></path></svg>"
            },
        };
    }
    VmdkDiskDirective_1 = VmdkDiskDirective;
    VmdkDiskDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            VmdkDiskDirective_1.titleIdCounter++;
            title.setAttribute("id", "vmdk-disk-" + VmdkDiskDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "vmdk-disk-" + VmdkDiskDirective_1.titleIdCounter);
        }
    };
    var VmdkDiskDirective_1;
    VmdkDiskDirective.titleIdCounter = 0;
    VmdkDiskDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], VmdkDiskDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], VmdkDiskDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], VmdkDiskDirective.prototype, "size", void 0);
    VmdkDiskDirective = VmdkDiskDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], VmdkDiskDirective);
VmdkDiskDirective.ɵfac = function VmdkDiskDirective_Factory(t) { return new (t || VmdkDiskDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
VmdkDiskDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: VmdkDiskDirective, selectors: [["", "ibmIconVmdkDisk", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VmdkDiskDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconVmdkDisk]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return VmdkDiskDirective;
}());
var VmdkDiskModule = /** @class */ (function () {
    function VmdkDiskModule() {
    }
VmdkDiskModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VmdkDiskModule });
VmdkDiskModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VmdkDiskModule_Factory(t) { return new (t || VmdkDiskModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VmdkDiskModule, { declarations: [VmdkDiskComponent, VmdkDiskDirective], exports: [VmdkDiskComponent, VmdkDiskDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VmdkDiskModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    VmdkDiskComponent,
                    VmdkDiskDirective,
                ],
                exports: [
                    VmdkDiskComponent,
                    VmdkDiskDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return VmdkDiskModule;
}());

export { VmdkDiskComponent, VmdkDiskDirective, VmdkDiskModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,