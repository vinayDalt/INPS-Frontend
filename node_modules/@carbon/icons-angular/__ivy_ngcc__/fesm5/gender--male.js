import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var GenderMaleComponent = /** @class */ (function () {
    function GenderMaleComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GenderMaleComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GenderMaleComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleComponent.prototype, "size", void 0);
GenderMaleComponent.ɵfac = function GenderMaleComponent_Factory(t) { return new (t || GenderMaleComponent)(); };
GenderMaleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GenderMaleComponent, selectors: [["ibm-icon-gender-male"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconGenderMale", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function GenderMaleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [GenderMaleDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GenderMaleComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-gender-male",
                template: "\n    <svg\n      ibmIconGenderMale\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return GenderMaleComponent;
}());
var GenderMaleDirective = /** @class */ (function () {
    function GenderMaleDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "GenderMale32", "filepath": "gender--male/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z" } }], "name": "gender--male", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "GenderMale24", "filepath": "gender--male/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z" } }], "name": "gender--male", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "GenderMale20", "filepath": "gender--male/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z" } }], "name": "gender--male", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "GenderMale16", "filepath": "gender--male/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z" } }], "name": "gender--male", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,4V6h6.5859l-7.6884,7.6885a8.028,8.028,0,1,0,1.414,1.414L26,7.4141V14h2V4ZM12,26a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,12,26Z\"></path></svg>"
            },
        };
    }
    GenderMaleDirective_1 = GenderMaleDirective;
    GenderMaleDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            GenderMaleDirective_1.titleIdCounter++;
            title.setAttribute("id", "gender-male-" + GenderMaleDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "gender-male-" + GenderMaleDirective_1.titleIdCounter);
        }
    };
    var GenderMaleDirective_1;
    GenderMaleDirective.titleIdCounter = 0;
    GenderMaleDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GenderMaleDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GenderMaleDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GenderMaleDirective.prototype, "size", void 0);
    GenderMaleDirective = GenderMaleDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], GenderMaleDirective);
GenderMaleDirective.ɵfac = function GenderMaleDirective_Factory(t) { return new (t || GenderMaleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
GenderMaleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GenderMaleDirective, selectors: [["", "ibmIconGenderMale", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GenderMaleDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconGenderMale]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return GenderMaleDirective;
}());
var GenderMaleModule = /** @class */ (function () {
    function GenderMaleModule() {
    }
GenderMaleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GenderMaleModule });
GenderMaleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function GenderMaleModule_Factory(t) { return new (t || GenderMaleModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GenderMaleModule, { declarations: [GenderMaleComponent, GenderMaleDirective], exports: [GenderMaleComponent, GenderMaleDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GenderMaleModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    GenderMaleComponent,
                    GenderMaleDirective,
                ],
                exports: [
                    GenderMaleComponent,
                    GenderMaleDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return GenderMaleModule;
}());

export { GenderMaleComponent, GenderMaleDirective, GenderMaleModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZGVyLS1tYWxlLmpzIiwic291cmNlcyI6WyJnZW5kZXItLW1hbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUlPO0FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O2dEQVl5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbnB1dCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBEaXJlY3RpdmUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSAnQGNhcmJvbi9pY29uLWhlbHBlcnMnO1xuXG52YXIgR2VuZGVyTWFsZUNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBHZW5kZXJNYWxlQ29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBHZW5kZXJNYWxlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBHZW5kZXJNYWxlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBHZW5kZXJNYWxlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgR2VuZGVyTWFsZUNvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgR2VuZGVyTWFsZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgR2VuZGVyTWFsZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEdlbmRlck1hbGVDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBHZW5kZXJNYWxlQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi1nZW5kZXItbWFsZVwiLFxuICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxzdmdcXG4gICAgICBpYm1JY29uR2VuZGVyTWFsZVxcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIEdlbmRlck1hbGVDb21wb25lbnQpO1xuICAgIHJldHVybiBHZW5kZXJNYWxlQ29tcG9uZW50O1xufSgpKTtcbnZhciBHZW5kZXJNYWxlRGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEdlbmRlck1hbGVEaXJlY3RpdmUoZWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICAgICAgICB0aGlzLmlzRm9jdXNhYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaWNvbnMgPSB7XG4gICAgICAgICAgICBcIjMyXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJHZW5kZXJNYWxlMzJcIiwgXCJmaWxlcGF0aFwiOiBcImdlbmRlci0tbWFsZS8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZ2VuZGVyLS1tYWxlXCIsIFwic2l6ZVwiOiAzMiB9LCBcInNpemVcIjogMzIgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjMyXFxcIiBoZWlnaHQ9XFxcIjMyXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJHZW5kZXJNYWxlMjRcIiwgXCJmaWxlcGF0aFwiOiBcImdlbmRlci0tbWFsZS8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZ2VuZGVyLS1tYWxlXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjIwXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJHZW5kZXJNYWxlMjBcIiwgXCJmaWxlcGF0aFwiOiBcImdlbmRlci0tbWFsZS8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZ2VuZGVyLS1tYWxlXCIsIFwic2l6ZVwiOiAyMCB9LCBcInNpemVcIjogMjAgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjE2XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJHZW5kZXJNYWxlMTZcIiwgXCJmaWxlcGF0aFwiOiBcImdlbmRlci0tbWFsZS8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXCIgfSB9XSwgXCJuYW1lXCI6IFwiZ2VuZGVyLS1tYWxlXCIsIFwic2l6ZVwiOiAxNiB9LCBcInNpemVcIjogMTYgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjE2XFxcIiBoZWlnaHQ9XFxcIjE2XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTgsNFY2aDYuNTg1OWwtNy42ODg0LDcuNjg4NWE4LjAyOCw4LjAyOCwwLDEsMCwxLjQxNCwxLjQxNEwyNiw3LjQxNDFWMTRoMlY0Wk0xMiwyNmE2LDYsMCwxLDEsNi02QTYuMDA2Niw2LjAwNjYsMCwwLDEsMTIsMjZaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIEdlbmRlck1hbGVEaXJlY3RpdmVfMSA9IEdlbmRlck1hbGVEaXJlY3RpdmU7XG4gICAgR2VuZGVyTWFsZURpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIEdlbmRlck1hbGVEaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJnZW5kZXItbWFsZS1cIiArIEdlbmRlck1hbGVEaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcImdlbmRlci1tYWxlLVwiICsgR2VuZGVyTWFsZURpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIEdlbmRlck1hbGVEaXJlY3RpdmVfMTtcbiAgICBHZW5kZXJNYWxlRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyID0gMDtcbiAgICBHZW5kZXJNYWxlRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgR2VuZGVyTWFsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgR2VuZGVyTWFsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgR2VuZGVyTWFsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEdlbmRlck1hbGVEaXJlY3RpdmUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIEdlbmRlck1hbGVEaXJlY3RpdmUucHJvdG90eXBlLCBcImlzRm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgR2VuZGVyTWFsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIEdlbmRlck1hbGVEaXJlY3RpdmUgPSBHZW5kZXJNYWxlRGlyZWN0aXZlXzEgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgRGlyZWN0aXZlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIltpYm1JY29uR2VuZGVyTWFsZV1cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBHZW5kZXJNYWxlRGlyZWN0aXZlKTtcbiAgICByZXR1cm4gR2VuZGVyTWFsZURpcmVjdGl2ZTtcbn0oKSk7XG52YXIgR2VuZGVyTWFsZU1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBHZW5kZXJNYWxlTW9kdWxlKCkge1xuICAgIH1cbiAgICBHZW5kZXJNYWxlTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIE5nTW9kdWxlKHtcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgIEdlbmRlck1hbGVDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgR2VuZGVyTWFsZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgR2VuZGVyTWFsZUNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBHZW5kZXJNYWxlRGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIEdlbmRlck1hbGVNb2R1bGUpO1xuICAgIHJldHVybiBHZW5kZXJNYWxlTW9kdWxlO1xufSgpKTtcblxuZXhwb3J0IHsgR2VuZGVyTWFsZUNvbXBvbmVudCwgR2VuZGVyTWFsZURpcmVjdGl2ZSwgR2VuZGVyTWFsZU1vZHVsZSB9O1xuIl19