import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DistributeVerticalBottomComponent = /** @class */ (function () {
    function DistributeVerticalBottomComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DistributeVerticalBottomComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DistributeVerticalBottomComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomComponent.prototype, "size", void 0);
DistributeVerticalBottomComponent.ɵfac = function DistributeVerticalBottomComponent_Factory(t) { return new (t || DistributeVerticalBottomComponent)(); };
DistributeVerticalBottomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DistributeVerticalBottomComponent, selectors: [["ibm-icon-distribute-vertical-bottom"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDistributeVerticalBottom", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DistributeVerticalBottomComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DistributeVerticalBottomDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DistributeVerticalBottomComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-distribute-vertical-bottom",
                template: "\n    <svg\n      ibmIconDistributeVerticalBottom\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DistributeVerticalBottomComponent;
}());
var DistributeVerticalBottomDirective = /** @class */ (function () {
    function DistributeVerticalBottomDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DistributeVerticalBottom32", "filepath": "distribute--vertical-bottom/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z" } }], "name": "distribute--vertical-bottom", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DistributeVerticalBottom24", "filepath": "distribute--vertical-bottom/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z" } }], "name": "distribute--vertical-bottom", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DistributeVerticalBottom20", "filepath": "distribute--vertical-bottom/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z" } }], "name": "distribute--vertical-bottom", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DistributeVerticalBottom16", "filepath": "distribute--vertical-bottom/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z" } }], "name": "distribute--vertical-bottom", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 28H30V30H2zM24 26H8a2.0021 2.0021 0 01-2-2V20a2.0021 2.0021 0 012-2H24a2.0021 2.0021 0 012 2v4A2.0021 2.0021 0 0124 26zm0-6.0012L8 20v4H24zM2 12H30V14H2zM20 10H12a2.0021 2.0021 0 01-2-2V4a2.0021 2.0021 0 012-2h8a2.0021 2.0021 0 012 2V8A2.0021 2.0021 0 0120 10zm0-6.0012L12 4V8h8z\"></path></svg>"
            },
        };
    }
    DistributeVerticalBottomDirective_1 = DistributeVerticalBottomDirective;
    DistributeVerticalBottomDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DistributeVerticalBottomDirective_1.titleIdCounter++;
            title.setAttribute("id", "distribute-vertical-bottom-" + DistributeVerticalBottomDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "distribute-vertical-bottom-" + DistributeVerticalBottomDirective_1.titleIdCounter);
        }
    };
    var DistributeVerticalBottomDirective_1;
    DistributeVerticalBottomDirective.titleIdCounter = 0;
    DistributeVerticalBottomDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DistributeVerticalBottomDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DistributeVerticalBottomDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DistributeVerticalBottomDirective.prototype, "size", void 0);
    DistributeVerticalBottomDirective = DistributeVerticalBottomDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DistributeVerticalBottomDirective);
DistributeVerticalBottomDirective.ɵfac = function DistributeVerticalBottomDirective_Factory(t) { return new (t || DistributeVerticalBottomDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DistributeVerticalBottomDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DistributeVerticalBottomDirective, selectors: [["", "ibmIconDistributeVerticalBottom", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DistributeVerticalBottomDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDistributeVerticalBottom]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DistributeVerticalBottomDirective;
}());
var DistributeVerticalBottomModule = /** @class */ (function () {
    function DistributeVerticalBottomModule() {
    }
DistributeVerticalBottomModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DistributeVerticalBottomModule });
DistributeVerticalBottomModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DistributeVerticalBottomModule_Factory(t) { return new (t || DistributeVerticalBottomModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DistributeVerticalBottomModule, { declarations: [DistributeVerticalBottomComponent, DistributeVerticalBottomDirective], exports: [DistributeVerticalBottomComponent, DistributeVerticalBottomDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DistributeVerticalBottomModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DistributeVerticalBottomComponent,
                    DistributeVerticalBottomDirective,
                ],
                exports: [
                    DistributeVerticalBottomComponent,
                    DistributeVerticalBottomDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return DistributeVerticalBottomModule;
}());

export { DistributeVerticalBottomComponent, DistributeVerticalBottomDirective, DistributeVerticalBottomModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,