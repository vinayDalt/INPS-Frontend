import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var LetterMmComponent = /** @class */ (function () {
    function LetterMmComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterMmComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterMmComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmComponent.prototype, "size", void 0);
LetterMmComponent.ɵfac = function LetterMmComponent_Factory(t) { return new (t || LetterMmComponent)(); };
LetterMmComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LetterMmComponent, selectors: [["ibm-icon-letter-mm"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconLetterMm", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function LetterMmComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [LetterMmDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LetterMmComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-letter-mm",
                template: "\n    <svg\n      ibmIconLetterMm\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return LetterMmComponent;
}());
var LetterMmDirective = /** @class */ (function () {
    function LetterMmDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "LetterMm32", "filepath": "letter--Mm/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z" } }], "name": "letter--Mm", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "LetterMm24", "filepath": "letter--Mm/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z" } }], "name": "letter--Mm", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "LetterMm20", "filepath": "letter--Mm/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z" } }], "name": "letter--Mm", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "LetterMm16", "filepath": "letter--Mm/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z" } }], "name": "letter--Mm", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 13H16V23h2V15h2v8h2V15h2v8h2V15A2 2 0 0024 13zM12 9L10.48 14 10 15.98 9.54 14 8 9 6 9 6 23 8 23 8 15 7.84 13 8.42 15 10 19.63 11.58 15 12.16 13 12 15 12 23 14 23 14 9 12 9z\"></path></svg>"
            },
        };
    }
    LetterMmDirective_1 = LetterMmDirective;
    LetterMmDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            LetterMmDirective_1.titleIdCounter++;
            title.setAttribute("id", "letter-mm-" + LetterMmDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "letter-mm-" + LetterMmDirective_1.titleIdCounter);
        }
    };
    var LetterMmDirective_1;
    LetterMmDirective.titleIdCounter = 0;
    LetterMmDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterMmDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterMmDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterMmDirective.prototype, "size", void 0);
    LetterMmDirective = LetterMmDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], LetterMmDirective);
LetterMmDirective.ɵfac = function LetterMmDirective_Factory(t) { return new (t || LetterMmDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
LetterMmDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LetterMmDirective, selectors: [["", "ibmIconLetterMm", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LetterMmDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconLetterMm]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return LetterMmDirective;
}());
var LetterMmModule = /** @class */ (function () {
    function LetterMmModule() {
    }
LetterMmModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LetterMmModule });
LetterMmModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LetterMmModule_Factory(t) { return new (t || LetterMmModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LetterMmModule, { declarations: [LetterMmComponent, LetterMmDirective], exports: [LetterMmComponent, LetterMmDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LetterMmModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    LetterMmComponent,
                    LetterMmDirective,
                ],
                exports: [
                    LetterMmComponent,
                    LetterMmDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return LetterMmModule;
}());

export { LetterMmComponent, LetterMmDirective, LetterMmModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGV0dGVyLS1NbS5qcyIsInNvdXJjZXMiOlsibGV0dGVyLS1NbS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBSU87QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBWXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSwgX19tZXRhZGF0YSB9IGZyb20gJ3RzbGliJztcbmltcG9ydCB7IElucHV0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIERpcmVjdGl2ZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldEF0dHJpYnV0ZXMgfSBmcm9tICdAY2FyYm9uL2ljb24taGVscGVycyc7XG5cbnZhciBMZXR0ZXJNbUNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBMZXR0ZXJNbUNvbXBvbmVudCgpIHtcbiAgICAgICAgdGhpcy5mb2N1c2FibGUgPSBmYWxzZTtcbiAgICB9XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTGV0dGVyTW1Db21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIExldHRlck1tQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBMZXR0ZXJNbUNvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIExldHRlck1tQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBMZXR0ZXJNbUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTGV0dGVyTW1Db21wb25lbnQucHJvdG90eXBlLCBcImlubmVyQ2xhc3NcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBMZXR0ZXJNbUNvbXBvbmVudC5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIExldHRlck1tQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi1sZXR0ZXItbW1cIixcbiAgICAgICAgICAgIHRlbXBsYXRlOiBcIlxcbiAgICA8c3ZnXFxuICAgICAgaWJtSWNvbkxldHRlck1tXFxuICAgICAgW3NpemVdPVxcXCJzaXplXFxcIlxcbiAgICAgIFthcmlhTGFiZWxdPVxcXCJhcmlhTGFiZWxcXFwiXFxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cXFwiYXJpYUxhYmVsbGVkYnlcXFwiXFxuICAgICAgW2FyaWFIaWRkZW5dPVxcXCJhcmlhSGlkZGVuXFxcIlxcbiAgICAgIFt0aXRsZV09XFxcInRpdGxlXFxcIlxcbiAgICAgIFtpc0ZvY3VzYWJsZV09XFxcImZvY3VzYWJsZVxcXCJcXG4gICAgICBbYXR0ci5jbGFzc109XFxcImlubmVyQ2xhc3NcXFwiPlxcbiAgICA8L3N2Zz5cXG4gIFwiXG4gICAgICAgIH0pXG4gICAgXSwgTGV0dGVyTW1Db21wb25lbnQpO1xuICAgIHJldHVybiBMZXR0ZXJNbUNvbXBvbmVudDtcbn0oKSk7XG52YXIgTGV0dGVyTW1EaXJlY3RpdmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTGV0dGVyTW1EaXJlY3RpdmUoZWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICAgICAgICB0aGlzLmlzRm9jdXNhYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaWNvbnMgPSB7XG4gICAgICAgICAgICBcIjMyXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJMZXR0ZXJNbTMyXCIsIFwiZmlsZXBhdGhcIjogXCJsZXR0ZXItLU1tLzMyLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAzMiwgXCJoZWlnaHRcIjogMzIgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yNCAxM0gxNlYyM2gyVjE1aDJ2OGgyVjE1aDJ2OGgyVjE1QTIgMiAwIDAwMjQgMTN6TTEyIDlMMTAuNDggMTQgMTAgMTUuOTggOS41NCAxNCA4IDkgNiA5IDYgMjMgOCAyMyA4IDE1IDcuODQgMTMgOC40MiAxNSAxMCAxOS42MyAxMS41OCAxNSAxMi4xNiAxMyAxMiAxNSAxMiAyMyAxNCAyMyAxNCA5IDEyIDl6XCIgfSB9XSwgXCJuYW1lXCI6IFwibGV0dGVyLS1NbVwiLCBcInNpemVcIjogMzIgfSwgXCJzaXplXCI6IDMyIH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIzMlxcXCIgaGVpZ2h0PVxcXCIzMlxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTI0IDEzSDE2VjIzaDJWMTVoMnY4aDJWMTVoMnY4aDJWMTVBMiAyIDAgMDAyNCAxM3pNMTIgOUwxMC40OCAxNCAxMCAxNS45OCA5LjU0IDE0IDggOSA2IDkgNiAyMyA4IDIzIDggMTUgNy44NCAxMyA4LjQyIDE1IDEwIDE5LjYzIDExLjU4IDE1IDEyLjE2IDEzIDEyIDE1IDEyIDIzIDE0IDIzIDE0IDkgMTIgOXpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjRcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkxldHRlck1tMjRcIiwgXCJmaWxlcGF0aFwiOiBcImxldHRlci0tTW0vMjQuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDI0LCBcImhlaWdodFwiOiAyNCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI0IDEzSDE2VjIzaDJWMTVoMnY4aDJWMTVoMnY4aDJWMTVBMiAyIDAgMDAyNCAxM3pNMTIgOUwxMC40OCAxNCAxMCAxNS45OCA5LjU0IDE0IDggOSA2IDkgNiAyMyA4IDIzIDggMTUgNy44NCAxMyA4LjQyIDE1IDEwIDE5LjYzIDExLjU4IDE1IDEyLjE2IDEzIDEyIDE1IDEyIDIzIDE0IDIzIDE0IDkgMTIgOXpcIiB9IH1dLCBcIm5hbWVcIjogXCJsZXR0ZXItLU1tXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjQgMTNIMTZWMjNoMlYxNWgydjhoMlYxNWgydjhoMlYxNUEyIDIgMCAwMDI0IDEzek0xMiA5TDEwLjQ4IDE0IDEwIDE1Ljk4IDkuNTQgMTQgOCA5IDYgOSA2IDIzIDggMjMgOCAxNSA3Ljg0IDEzIDguNDIgMTUgMTAgMTkuNjMgMTEuNTggMTUgMTIuMTYgMTMgMTIgMTUgMTIgMjMgMTQgMjMgMTQgOSAxMiA5elxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyMFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiTGV0dGVyTW0yMFwiLCBcImZpbGVwYXRoXCI6IFwibGV0dGVyLS1NbS8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjQgMTNIMTZWMjNoMlYxNWgydjhoMlYxNWgydjhoMlYxNUEyIDIgMCAwMDI0IDEzek0xMiA5TDEwLjQ4IDE0IDEwIDE1Ljk4IDkuNTQgMTQgOCA5IDYgOSA2IDIzIDggMjMgOCAxNSA3Ljg0IDEzIDguNDIgMTUgMTAgMTkuNjMgMTEuNTggMTUgMTIuMTYgMTMgMTIgMTUgMTIgMjMgMTQgMjMgMTQgOSAxMiA5elwiIH0gfV0sIFwibmFtZVwiOiBcImxldHRlci0tTW1cIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yNCAxM0gxNlYyM2gyVjE1aDJ2OGgyVjE1aDJ2OGgyVjE1QTIgMiAwIDAwMjQgMTN6TTEyIDlMMTAuNDggMTQgMTAgMTUuOTggOS41NCAxNCA4IDkgNiA5IDYgMjMgOCAyMyA4IDE1IDcuODQgMTMgOC40MiAxNSAxMCAxOS42MyAxMS41OCAxNSAxMi4xNiAxMyAxMiAxNSAxMiAyMyAxNCAyMyAxNCA5IDEyIDl6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjE2XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJMZXR0ZXJNbTE2XCIsIFwiZmlsZXBhdGhcIjogXCJsZXR0ZXItLU1tLzE2LmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAxNiwgXCJoZWlnaHRcIjogMTYgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yNCAxM0gxNlYyM2gyVjE1aDJ2OGgyVjE1aDJ2OGgyVjE1QTIgMiAwIDAwMjQgMTN6TTEyIDlMMTAuNDggMTQgMTAgMTUuOTggOS41NCAxNCA4IDkgNiA5IDYgMjMgOCAyMyA4IDE1IDcuODQgMTMgOC40MiAxNSAxMCAxOS42MyAxMS41OCAxNSAxMi4xNiAxMyAxMiAxNSAxMiAyMyAxNCAyMyAxNCA5IDEyIDl6XCIgfSB9XSwgXCJuYW1lXCI6IFwibGV0dGVyLS1NbVwiLCBcInNpemVcIjogMTYgfSwgXCJzaXplXCI6IDE2IH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIxNlxcXCIgaGVpZ2h0PVxcXCIxNlxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTI0IDEzSDE2VjIzaDJWMTVoMnY4aDJWMTVoMnY4aDJWMTVBMiAyIDAgMDAyNCAxM3pNMTIgOUwxMC40OCAxNCAxMCAxNS45OCA5LjU0IDE0IDggOSA2IDkgNiAyMyA4IDIzIDggMTUgNy44NCAxMyA4LjQyIDE1IDEwIDE5LjYzIDExLjU4IDE1IDEyLjE2IDEzIDEyIDE1IDEyIDIzIDE0IDIzIDE0IDkgMTIgOXpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgTGV0dGVyTW1EaXJlY3RpdmVfMSA9IExldHRlck1tRGlyZWN0aXZlO1xuICAgIExldHRlck1tRGlyZWN0aXZlLnByb3RvdHlwZS5uZ0FmdGVyVmlld0luaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG4gICAgICAgIHZhciBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdO1xuICAgICAgICB2YXIgZG9tUGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICAgICAgICB2YXIgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgICAgIHZhciBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHZhciBub2RlID0gc3ZnRWxlbWVudC5maXJzdENoaWxkO1xuICAgICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAgICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgICAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICAgICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGF0dHJLZXlzID0gT2JqZWN0LmtleXMoYXR0cmlidXRlcyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwidGl0bGVcIikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgICAgICAgdmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgICAgICAgTGV0dGVyTW1EaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJsZXR0ZXItbW0tXCIgKyBMZXR0ZXJNbURpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIFwibGV0dGVyLW1tLVwiICsgTGV0dGVyTW1EaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBMZXR0ZXJNbURpcmVjdGl2ZV8xO1xuICAgIExldHRlck1tRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyID0gMDtcbiAgICBMZXR0ZXJNbURpcmVjdGl2ZS5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBFbGVtZW50UmVmIH1cbiAgICBdOyB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIExldHRlck1tRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBMZXR0ZXJNbURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTGV0dGVyTW1EaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBMZXR0ZXJNbURpcmVjdGl2ZS5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTGV0dGVyTW1EaXJlY3RpdmUucHJvdG90eXBlLCBcImlzRm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTGV0dGVyTW1EaXJlY3RpdmUucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBMZXR0ZXJNbURpcmVjdGl2ZSA9IExldHRlck1tRGlyZWN0aXZlXzEgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgRGlyZWN0aXZlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIltpYm1JY29uTGV0dGVyTW1dXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZl0pXG4gICAgXSwgTGV0dGVyTW1EaXJlY3RpdmUpO1xuICAgIHJldHVybiBMZXR0ZXJNbURpcmVjdGl2ZTtcbn0oKSk7XG52YXIgTGV0dGVyTW1Nb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTGV0dGVyTW1Nb2R1bGUoKSB7XG4gICAgfVxuICAgIExldHRlck1tTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIE5nTW9kdWxlKHtcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgIExldHRlck1tQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIExldHRlck1tRGlyZWN0aXZlLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgICAgICBMZXR0ZXJNbUNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBMZXR0ZXJNbURpcmVjdGl2ZSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSlcbiAgICBdLCBMZXR0ZXJNbU1vZHVsZSk7XG4gICAgcmV0dXJuIExldHRlck1tTW9kdWxlO1xufSgpKTtcblxuZXhwb3J0IHsgTGV0dGVyTW1Db21wb25lbnQsIExldHRlck1tRGlyZWN0aXZlLCBMZXR0ZXJNbU1vZHVsZSB9O1xuIl19