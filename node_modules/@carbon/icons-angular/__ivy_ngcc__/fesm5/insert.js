import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var InsertComponent = /** @class */ (function () {
    function InsertComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], InsertComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], InsertComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertComponent.prototype, "size", void 0);
InsertComponent.ɵfac = function InsertComponent_Factory(t) { return new (t || InsertComponent)(); };
InsertComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InsertComponent, selectors: [["ibm-icon-insert"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconInsert", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function InsertComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [InsertDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InsertComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-insert",
                template: "\n    <svg\n      ibmIconInsert\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return InsertComponent;
}());
var InsertDirective = /** @class */ (function () {
    function InsertDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Insert32", "filepath": "insert/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z" } }], "name": "insert", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Insert24", "filepath": "insert/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z" } }], "name": "insert", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Insert20", "filepath": "insert/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z" } }], "name": "insert", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Insert16", "filepath": "insert/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z" } }], "name": "insert", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M2 9h9V2H2zM4 4H9V7H4zM2 19h9V12H2zm2-5H9v3H4zM2 29h9V22H2zm2-5H9v3H4zM27 9H18l3.41-3.59L20 4l-6 6 6 6 1.41-1.41L18 11h9a1 1 0 011 1V24a1 1 0 01-1 1H15v2H27a3 3 0 003-3V12A3 3 0 0027 9z\"></path></svg>"
            },
        };
    }
    InsertDirective_1 = InsertDirective;
    InsertDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            InsertDirective_1.titleIdCounter++;
            title.setAttribute("id", "insert-" + InsertDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "insert-" + InsertDirective_1.titleIdCounter);
        }
    };
    var InsertDirective_1;
    InsertDirective.titleIdCounter = 0;
    InsertDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], InsertDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], InsertDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], InsertDirective.prototype, "size", void 0);
    InsertDirective = InsertDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], InsertDirective);
InsertDirective.ɵfac = function InsertDirective_Factory(t) { return new (t || InsertDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
InsertDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InsertDirective, selectors: [["", "ibmIconInsert", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InsertDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconInsert]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return InsertDirective;
}());
var InsertModule = /** @class */ (function () {
    function InsertModule() {
    }
InsertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InsertModule });
InsertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InsertModule_Factory(t) { return new (t || InsertModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InsertModule, { declarations: [InsertComponent, InsertDirective], exports: [InsertComponent, InsertDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InsertModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    InsertComponent,
                    InsertDirective,
                ],
                exports: [
                    InsertComponent,
                    InsertDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return InsertModule;
}());

export { InsertComponent, InsertDirective, InsertModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,