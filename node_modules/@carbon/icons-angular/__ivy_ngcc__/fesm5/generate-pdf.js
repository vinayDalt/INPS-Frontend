import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var GeneratePdfComponent = /** @class */ (function () {
    function GeneratePdfComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GeneratePdfComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GeneratePdfComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfComponent.prototype, "size", void 0);
GeneratePdfComponent.ɵfac = function GeneratePdfComponent_Factory(t) { return new (t || GeneratePdfComponent)(); };
GeneratePdfComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GeneratePdfComponent, selectors: [["ibm-icon-generate-pdf"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconGeneratePdf", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function GeneratePdfComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [GeneratePdfDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GeneratePdfComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-generate-pdf",
                template: "\n    <svg\n      ibmIconGeneratePdf\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return GeneratePdfComponent;
}());
var GeneratePdfDirective = /** @class */ (function () {
    function GeneratePdfDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "GeneratePdf32", "filepath": "generate-pdf/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z" } }, { "elem": "path", "attrs": { "d": "M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z" } }], "name": "generate-pdf", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z\"></path><path d=\"M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "GeneratePdf24", "filepath": "generate-pdf/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z" } }, { "elem": "path", "attrs": { "d": "M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z" } }], "name": "generate-pdf", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z\"></path><path d=\"M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "GeneratePdf20", "filepath": "generate-pdf/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z" } }, { "elem": "path", "attrs": { "d": "M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z" } }], "name": "generate-pdf", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z\"></path><path d=\"M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "GeneratePdf16", "filepath": "generate-pdf/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z" } }, { "elem": "path", "attrs": { "d": "M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z" } }], "name": "generate-pdf", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,24v4H8V24H6v4H6a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2h0V24Z\"></path><path d=\"M21 21L19.586 19.586 17 22.172 17 14 15 14 15 22.172 12.414 19.586 11 21 16 26 21 21zM28 4L28 2 22 2 22 12 24 12 24 8 27 8 27 6 24 6 24 4 28 4zM17 12H13V2h4a3.0033 3.0033 0 013 3V9A3.0033 3.0033 0 0117 12zm-2-2h2a1.0011 1.0011 0 001-1V5a1.0011 1.0011 0 00-1-1H15zM9 2H4V12H6V9H9a2.0027 2.0027 0 002-2V4A2.0023 2.0023 0 009 2zM6 7V4H9l.001 3z\"></path></svg>"
            },
        };
    }
    GeneratePdfDirective_1 = GeneratePdfDirective;
    GeneratePdfDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            GeneratePdfDirective_1.titleIdCounter++;
            title.setAttribute("id", "generate-pdf-" + GeneratePdfDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "generate-pdf-" + GeneratePdfDirective_1.titleIdCounter);
        }
    };
    var GeneratePdfDirective_1;
    GeneratePdfDirective.titleIdCounter = 0;
    GeneratePdfDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GeneratePdfDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GeneratePdfDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], GeneratePdfDirective.prototype, "size", void 0);
    GeneratePdfDirective = GeneratePdfDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], GeneratePdfDirective);
GeneratePdfDirective.ɵfac = function GeneratePdfDirective_Factory(t) { return new (t || GeneratePdfDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
GeneratePdfDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GeneratePdfDirective, selectors: [["", "ibmIconGeneratePdf", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GeneratePdfDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconGeneratePdf]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return GeneratePdfDirective;
}());
var GeneratePdfModule = /** @class */ (function () {
    function GeneratePdfModule() {
    }
GeneratePdfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GeneratePdfModule });
GeneratePdfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function GeneratePdfModule_Factory(t) { return new (t || GeneratePdfModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GeneratePdfModule, { declarations: [GeneratePdfComponent, GeneratePdfDirective], exports: [GeneratePdfComponent, GeneratePdfDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GeneratePdfModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    GeneratePdfComponent,
                    GeneratePdfDirective,
                ],
                exports: [
                    GeneratePdfComponent,
                    GeneratePdfDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return GeneratePdfModule;
}());

export { GeneratePdfComponent, GeneratePdfDirective, GeneratePdfModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,